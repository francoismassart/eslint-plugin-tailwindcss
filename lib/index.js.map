{"version":3,"sources":["../src/configs/rules.ts","../src/configs/flat-recommended.ts","../src/configs/recommended.ts","../src/configs/index.ts","../src/util/regex.ts","../src/util/removeDuplicatesFromArray.ts","../src/util/ast.ts","../src/util/customConfig.ts","../src/util/docsUrl.ts","../src/util/parser.ts","../src/util/prettier/order.ts","../src/util/removeDuplicatesFromClassnamesAndWhitespaces.ts","../src/util/settings.ts","../src/rules/classnames-order.ts","../src/util/types/angle.ts","../src/util/types/color.ts","../src/util/types/length.ts","../src/util/groupMethods.ts","../src/rules/enforces-negative-arbitrary-values.ts","../src/configs/groups.ts","../src/rules/enforces-shorthand.ts","../src/rules/migration-from-tailwind-2.ts","../src/rules/no-arbitrary-value.ts","../src/rules/no-contradicting-classname.ts","../src/util/cssFiles.ts","../src/util/generated.ts","../src/rules/no-custom-classname.ts","../src/rules/no-unnecessary-arbitrary-value.ts","../src/rules/index.ts","../package.json","../src/index.ts"],"sourcesContent":["/**\n * @fileoverview Default rules configuration\n * @author François Massart\n */\n\nexport default {\n  'tailwindcss/classnames-order': 'warn',\n  'tailwindcss/enforces-negative-arbitrary-values': 'warn',\n  'tailwindcss/enforces-shorthand': 'warn',\n  'tailwindcss/migration-from-tailwind-2': 'warn',\n  'tailwindcss/no-arbitrary-value': 'off',\n  'tailwindcss/no-custom-classname': 'warn',\n  'tailwindcss/no-contradicting-classname': 'error',\n  'tailwindcss/no-unnecessary-arbitrary-value': 'warn',\n};\n","/**\n * @fileoverview Recommended coniguration for flat style\n * @see https://eslint.org/docs/latest/use/configure/configuration-files-new\n * @author François Massart\n */\n'use strict';\n\nimport rules from './rules';\n\nconst plugin = await import('../index');\n\nexport default [\n  {\n    name: 'tailwindcss:base',\n    plugins: {\n      get tailwindcss() {\n        return plugin;\n      },\n    },\n    languageOptions: {\n      parserOptions: {\n        ecmaFeatures: {\n          jsx: true,\n        },\n      },\n    },\n  },\n  {\n    name: 'tailwindcss:rules',\n    rules,\n  },\n];\n","/**\n * @fileoverview Recommended coniguration for legacy style\n * @see https://eslint.org/docs/latest/use/configure/configuration-files\n * @author François Massart\n */\n'use strict';\n\nimport rules from './rules';\n\nexport default {\n  plugins: ['tailwindcss'],\n  parserOptions: {\n    ecmaFeatures: {\n      jsx: true,\n    },\n  },\n  rules,\n};\n","import flatRecommended from './flat-recommended';\nimport recommended from './recommended';\n\nexport const configs = {\n  recommended,\n  'flat/recommended': flatRecommended,\n};\n","/**\n * Escapes a string to be used in a regular expression\n * Copied from https://stackoverflow.com/a/3561711.\n * @param {string} input\n * @returns {string}\n */\nfunction escapeRegex(input: string): string {\n  return input.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nconst separatorRegEx = /([\\t\\n\\f\\r ]+)/;\n\nexport { escapeRegex, separatorRegEx };\n","'use strict';\n\nfunction removeDuplicatesFromArray(arr: Iterable<string> | null | undefined) {\n  return [...new Set(arr)];\n}\n\nexport default removeDuplicatesFromArray;\n","/**\n * @fileoverview Utility functions for AST\n */\n\n'use strict';\n\nimport { separatorRegEx } from './regex';\n// context.parserPath\n// /.../eslint-plugin-tailwindcss/node_modules/espree/espree.js\n// /.../eslint-plugin-tailwindcss/node_modules/@angular-eslint/template-parser/dist/index.js\n\nconst removeDuplicatesFromArray = require('./removeDuplicatesFromArray');\n\nfunction calleeToString(calleeNode) {\n  if (calleeNode.type === 'Identifier') {\n    return calleeNode.name;\n  }\n  if (calleeNode.type === 'MemberExpression') {\n    return `${calleeNode.object.name}.${calleeNode.property.name}`;\n  }\n}\n\n/**\n * Find out if node is `class` or `className`\n *\n * @param {ASTNode} node The AST node being checked\n * @param {String} classRegex Regex to test the attribute that is being checked against\n * @returns {Boolean}\n */\nfunction isClassAttribute(node, classRegex) {\n  if (!node.name) {\n    return false;\n  }\n  let name = '';\n  switch (node.type) {\n    case 'TextAttribute':\n      name = node.name;\n      break;\n    case 'JSXAttribute':\n      if (node.name.type === 'JSXNamespacedName') {\n        const ns = node.name.namespace.name || '';\n        name = (ns.length ? ns + ':' : '') + node.name.name.name;\n      } else {\n        name = node.name.name;\n      }\n      break;\n    default:\n      name = node.name.name;\n  }\n  return new RegExp(classRegex).test(name);\n}\n\n/**\n * Find out if node is `class`\n *\n * @param {ASTNode} node The AST node being checked\n * @param {String} classRegex Regex to test the attribute that is being checked against\n * @returns {Boolean}\n */\nfunction isVueClassAttribute(node, classRegex) {\n  const re = new RegExp(classRegex);\n  let name = '';\n  switch (true) {\n    case node.key && node.key.name && re.test(node.key.name):\n      // class=\"vue-classes-as-litteral\"\n      return true;\n    case node.key &&\n      node.key.name &&\n      node.key.name.name &&\n      node.key.argument &&\n      node.key.argument.name &&\n      /^bind$/.test(node.key.name.name) &&\n      re.test(node.key.argument.name):\n      // v-bind:class=\"vue-classes-as-bind\"\n      // :class=\"vue-classes-as-bind\"\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Find out if node's value attribute is just simple text\n *\n * @param {ASTNode} node The AST node being checked\n * @returns {Boolean}\n */\nfunction isVLiteralValue(node) {\n  return node.value && node.value.type === 'VLiteral';\n}\n\n/**\n * Find out if node's value attribute is an ArrayExpression\n *\n * @param {ASTNode} node The AST node being checked\n * @returns {Boolean}\n */\nfunction isArrayExpression(node) {\n  return (\n    node.value &&\n    node.value.type === 'VExpressionContainer' &&\n    node.value.expression &&\n    node.value.expression.type === 'ArrayExpression'\n  );\n}\n\n/**\n * Find out if node's value attribute is an ObjectExpression\n *\n * @param {ASTNode} node The AST node being checked\n * @returns {Boolean}\n */\nfunction isObjectExpression(node) {\n  return (\n    node.value &&\n    node.value.type === 'VExpressionContainer' &&\n    node.value.expression &&\n    node.value.expression.type === 'ObjectExpression'\n  );\n}\n\n/**\n * Find out if node's value attribute is just simple text\n *\n * @param {ASTNode} node The AST node being checked\n * @returns {Boolean}\n */\nfunction isVueValidAttributeValue(node) {\n  switch (true) {\n    case isVLiteralValue(node): // Simple string\n    case isArrayExpression(node): // ['tw-unknown-class']\n    case isObjectExpression(node): // {'tw-unknown-class': true}\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Find out if node's value attribute is just simple text\n *\n * @param {ASTNode} node The AST node being checked\n * @returns {Boolean}\n */\nfunction isLiteralAttributeValue(node) {\n  if (node.type === 'TextAttribute' && node.name === 'class' && typeof node.value === 'string') {\n    return true;\n  }\n  if (node.value) {\n    switch (node.value.type) {\n      case 'Literal':\n        // No support for dynamic or conditional...\n        return !/\\{|\\?|\\}/.test(node.value.value);\n      case 'JSXExpressionContainer':\n        // className={\"...\"}\n        return node.value.expression.type === 'Literal';\n    }\n  }\n  return false;\n}\n\n/**\n * Find out if the node is a valid candidate for our rules\n *\n * @param {ASTNode} node The AST node being checked\n * @param {String} classRegex Regex to test the attribute that is being checked against\n * @returns {Boolean}\n */\nfunction isValidJSXAttribute(node, classRegex) {\n  if (!isClassAttribute(node, classRegex)) {\n    // Only run for class[Name] attributes\n    return false;\n  }\n  if (!isLiteralAttributeValue(node)) {\n    // No support for dynamic or conditional classnames\n    return false;\n  }\n  return true;\n}\n\n/**\n * Find out if the node is a valid candidate for our rules\n *\n * @param {ASTNode} node The AST node being checked\n * @param {String} classRegex Regex to test the attribute that is being checked against\n * @returns {Boolean}\n */\nfunction isValidVueAttribute(node, classRegex) {\n  if (!isVueClassAttribute(node, classRegex)) {\n    // Only run for class attributes\n    return false;\n  }\n  if (!isVueValidAttributeValue(node)) {\n    // No support for dynamic or conditional classnames\n    return false;\n  }\n  return true;\n}\n\nfunction extractRangeFromNode(node) {\n  if (node.type === 'TextAttribute' && node.name === 'class') {\n    return [node.valueSpan.fullStart.offset, node.valueSpan.end.offset];\n  }\n  if (node.value === undefined) {\n    return [0, 0];\n  }\n  switch (node.value.type) {\n    case 'JSXExpressionContainer':\n      return node.value.expression.range;\n    default:\n      return node.value.range;\n  }\n}\n\nfunction extractValueFromNode(node) {\n  if (node.type === 'TextAttribute' && node.name === 'class') {\n    return node.value;\n  }\n  if (node.value === undefined) {\n    return node.value;\n  }\n\n  switch (node.value.type) {\n    case 'JSXExpressionContainer':\n      return node.value.expression.value;\n    case 'VExpressionContainer':\n      switch (node.value.expression.type) {\n        case 'ArrayExpression':\n          return node.value.expression.elements;\n        case 'ObjectExpression':\n          return node.value.expression.properties;\n      }\n      return node.value.expression.value;\n    default:\n      return node.value.value;\n  }\n}\n\nfunction extractClassnamesFromValue(classStr) {\n  if (typeof classStr !== 'string') {\n    return { classNames: [], whitespaces: [], headSpace: false, tailSpace: false };\n  }\n  let parts = classStr.split(separatorRegEx);\n  if (parts[0] === '') {\n    parts.shift();\n  }\n  if (parts[parts.length - 1] === '') {\n    parts.pop();\n  }\n  let headSpace = separatorRegEx.test(parts[0]);\n  let tailSpace = separatorRegEx.test(parts[parts.length - 1]);\n  const isClass = (_, i) => (headSpace ? i % 2 !== 0 : i % 2 === 0);\n  const isNotClass = (_, i) => (headSpace ? i % 2 === 0 : i % 2 !== 0);\n  let classNames = parts.filter(isClass);\n  let whitespaces = parts.filter(isNotClass);\n  return { classNames: classNames, whitespaces: whitespaces, headSpace: headSpace, tailSpace: tailSpace };\n}\n\n/**\n * Inspect and parse an abstract syntax node and run a callback function\n *\n * @param {ASTNode} rootNode The current root node being parsed by eslint\n * @param {ASTNode} childNode The AST node child argument being checked\n * @param {Function} cb The callback function\n * @param {Boolean} skipConditional Optional, indicate distinct parsing for conditional nodes\n * @param {Boolean} isolate Optional, set internally to isolate parsing and validation on conditional children\n * @param {Array} ignoredKeys Optional, set object keys which should not be parsed e.g. for `cva`\n * @returns {void}\n */\nfunction parseNodeRecursive(rootNode, childNode, cb, skipConditional = false, isolate = false, ignoredKeys = []) {\n  // TODO allow vue non litteral\n  let originalClassNamesValue;\n  let classNames;\n  if (childNode === null) {\n    originalClassNamesValue = extractValueFromNode(rootNode);\n    ({ classNames } = extractClassnamesFromValue(originalClassNamesValue));\n    classNames = removeDuplicatesFromArray(classNames);\n    if (classNames.length === 0) {\n      // Don't run for empty className\n      return;\n    }\n    cb(classNames, rootNode);\n  } else if (childNode === undefined) {\n    // Ignore invalid child candidates (probably inside complex TemplateLiteral)\n    return;\n  } else {\n    const forceIsolation = skipConditional ? true : isolate;\n    let trim = false;\n    switch (childNode.type) {\n      case 'TemplateLiteral':\n        childNode.expressions.forEach((exp) => {\n          parseNodeRecursive(rootNode, exp, cb, skipConditional, forceIsolation, ignoredKeys);\n        });\n        childNode.quasis.forEach((quasis) => {\n          parseNodeRecursive(rootNode, quasis, cb, skipConditional, isolate, ignoredKeys);\n        });\n        return;\n      case 'ConditionalExpression':\n        parseNodeRecursive(rootNode, childNode.consequent, cb, skipConditional, forceIsolation, ignoredKeys);\n        parseNodeRecursive(rootNode, childNode.alternate, cb, skipConditional, forceIsolation, ignoredKeys);\n        return;\n      case 'LogicalExpression':\n        parseNodeRecursive(rootNode, childNode.right, cb, skipConditional, forceIsolation, ignoredKeys);\n        return;\n      case 'ArrayExpression':\n        childNode.elements.forEach((el) => {\n          parseNodeRecursive(rootNode, el, cb, skipConditional, forceIsolation, ignoredKeys);\n        });\n        return;\n      case 'ObjectExpression':\n        childNode.properties.forEach((prop) => {\n          const isUsedByClassNamesPlugin =\n            (rootNode.callee && rootNode.callee.name === 'classnames') || rootNode.type === 'VAttribute';\n\n          if (prop.type === 'SpreadElement') {\n            // Ignore spread elements\n            return;\n          }\n\n          if (prop.key.type === 'Identifier' && ignoredKeys.includes(prop.key.name)) {\n            // Ignore specific keys defined in settings\n            return;\n          }\n\n          parseNodeRecursive(\n            rootNode,\n            isUsedByClassNamesPlugin ? prop.key : prop.value,\n            cb,\n            skipConditional,\n            forceIsolation,\n            ignoredKeys\n          );\n        });\n        return;\n      case 'Property':\n        parseNodeRecursive(rootNode, childNode.key, cb, skipConditional, forceIsolation, ignoredKeys);\n        return;\n      case 'Literal':\n        trim = true;\n        originalClassNamesValue = childNode.value;\n        break;\n      case 'TemplateElement':\n        originalClassNamesValue = childNode.value.raw;\n        break;\n    }\n    ({ classNames } = extractClassnamesFromValue(originalClassNamesValue));\n    classNames = removeDuplicatesFromArray(classNames);\n    if (classNames.length === 0) {\n      // Don't run for empty className\n      return;\n    }\n    const targetNode = isolate ? null : rootNode;\n    cb(classNames, targetNode);\n  }\n}\n\nfunction getTemplateElementPrefix(text, raw) {\n  const idx = text.indexOf(raw);\n  if (idx === 0) {\n    return '';\n  }\n  return text.split(raw).shift();\n}\n\nfunction getTemplateElementSuffix(text, raw) {\n  if (text.indexOf(raw) === -1) {\n    return '';\n  }\n  return text.split(raw).pop();\n}\n\nfunction getTemplateElementBody(text, prefix, suffix) {\n  let arr = text.split(prefix);\n  arr.shift();\n  let body = arr.join(prefix);\n  arr = body.split(suffix);\n  arr.pop();\n  return arr.join(suffix);\n}\n\nexport default {\n  calleeToString,\n  extractRangeFromNode,\n  extractValueFromNode,\n  extractClassnamesFromValue,\n  isClassAttribute,\n  isLiteralAttributeValue,\n  isArrayExpression,\n  isObjectExpression,\n  isValidJSXAttribute,\n  isValidVueAttribute,\n  isVLiteralValue,\n  parseNodeRecursive,\n  getTemplateElementPrefix,\n  getTemplateElementSuffix,\n  getTemplateElementBody,\n};\n","'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\nimport resolveConfig from 'tailwindcss/resolveConfig';\nlet twLoadConfig: { loadConfig: (arg0: any) => any } | null;\n\ntry {\n  twLoadConfig = require('tailwindcss/lib/lib/load-config');\n} catch (err) {\n  twLoadConfig = null;\n}\n\nconst CHECK_REFRESH_RATE = 1_000;\nlet previousConfig: null = null;\nlet lastCheck: number | null = null;\nlet mergedConfig: null = null;\nlet lastModifiedDate: string | null = null;\n\n/**\n * @see https://stackoverflow.com/questions/9210542/node-js-require-cache-possible-to-invalidate\n * @param {string} module The path to the module\n * @returns the module's export\n */\nfunction requireUncached(module: string) {\n  delete require.cache[require.resolve(module)];\n  if (twLoadConfig === null) {\n    // Using native loading\n    return require(module);\n  } else {\n    // Using Tailwind CSS's loadConfig utility\n    return twLoadConfig.loadConfig(module);\n  }\n}\n\n/**\n * Load the config from a path string or parsed from an object\n * @param {string|Object} config\n * @returns `null` when unchanged, `{}` when not found\n */\nfunction loadConfig(config: string | null) {\n  let loadedConfig = null;\n  if (typeof config === 'string') {\n    const resolvedPath = path.isAbsolute(config) ? config : path.join(path.resolve(), config);\n    try {\n      const stats = fs.statSync(resolvedPath);\n      const mtime = `${stats.mtime || ''}`;\n      if (stats === null) {\n        // Default to no config\n        loadedConfig = {};\n      } else if (lastModifiedDate !== mtime) {\n        // Load the config based on path\n        lastModifiedDate = mtime;\n        loadedConfig = requireUncached(resolvedPath);\n      } else {\n        // Unchanged config\n        loadedConfig = null;\n      }\n    } catch (err) {\n      // Default to no config\n      loadedConfig = {};\n    } finally {\n      return loadedConfig;\n    }\n  } else {\n    if (typeof config === 'object' && config !== null) {\n      return config;\n    }\n    return {};\n  }\n}\n\nfunction convertConfigToString(config: any) {\n  switch (typeof config) {\n    case 'string':\n      return config;\n    case 'object':\n      return JSON.stringify(config);\n    default:\n      return config.toString();\n  }\n}\n\nfunction resolve(twConfig: any) {\n  const newConfig = convertConfigToString(twConfig) !== convertConfigToString(previousConfig);\n  const now = Date.now();\n  const expired = now - (lastCheck ?? 0) > CHECK_REFRESH_RATE;\n  if (newConfig || expired) {\n    previousConfig = twConfig;\n    lastCheck = now;\n    const userConfig = loadConfig(twConfig);\n    // userConfig is null when config file was not modified\n    if (userConfig !== null) {\n      mergedConfig = resolveConfig(userConfig);\n    }\n  }\n  return mergedConfig;\n}\n\nexport default {\n  resolve,\n};\n","'use strict';\n\n// Copied from https://github.com/yannickcr/eslint-plugin-react/blob/master/lib/util/docsUrl.js\nfunction docsUrl(ruleName: string) {\n  return `https://github.com/francoismassart/eslint-plugin-tailwindcss/tree/master/docs/rules/${ruleName}.md`;\n}\n\nexport default docsUrl;\n","/**\n * @see parserServices https://eslint.org/docs/developer-guide/working-with-rules#the-context-object\n * @param {Object} context\n * @param {Function} templateBodyVisitor\n * @param {Function} scriptVisitor\n * @returns\n */\nfunction defineTemplateBodyVisitor(context: object, templateBodyVisitor: Function, scriptVisitor: Function) {\n  const parserServices = getParserServices(context);\n  if (parserServices == null || parserServices.defineTemplateBodyVisitor == null) {\n    // Default parser\n    return scriptVisitor;\n  }\n\n  // Using \"vue-eslint-parser\" requires this setup\n  // @see https://eslint.org/docs/developer-guide/working-with-rules#the-context-object\n  return parserServices.defineTemplateBodyVisitor(templateBodyVisitor, scriptVisitor);\n}\n\n/**\n * This function is API compatible with eslint v8.x and eslint v9 or later.\n * @see https://eslint.org/blog/2023/09/preparing-custom-rules-eslint-v9/#from-context-to-sourcecode\n */\nfunction getParserServices(context: { sourceCode?: any; parserServices?: any }) {\n  return context.sourceCode ? context.sourceCode.parserServices : context.parserServices;\n}\n\nexport default {\n  defineTemplateBodyVisitor,\n};\n","import { separatorRegEx } from '../regex';\n\nfunction bigSign(bigIntValue: number) {\n  return (bigIntValue > 0n) - (bigIntValue < 0n);\n}\n\nfunction prefixCandidate(context: { tailwindConfig: { prefix: any } }, selector: string) {\n  let prefix = context.tailwindConfig.prefix;\n  return typeof prefix === 'function' ? prefix(selector) : prefix + selector;\n}\n\n// Polyfill for older Tailwind CSS versions\nfunction getClassOrderPolyfill(classes: string[], { env }: { env: any }) {\n  // A list of utilities that are used by certain Tailwind CSS utilities but\n  // that don't exist on their own. This will result in them \"not existing\" and\n  // sorting could be weird since you still require them in order to make the\n  // host utitlies work properly. (Thanks Biology)\n  let parasiteUtilities = new Set([prefixCandidate(env.context, 'group'), prefixCandidate(env.context, 'peer')]);\n\n  let classNamesWithOrder = [];\n\n  for (let className of classes) {\n    let order = env.generateRules(new Set([className]), env.context).sort(([a], [z]) => bigSign(z - a))[0]?.[0] ?? null;\n\n    if (order === null && parasiteUtilities.has(className)) {\n      // This will make sure that it is at the very beginning of the\n      // `components` layer which technically means 'before any\n      // components'.\n      order = env.context.layerOrder.components;\n    }\n\n    classNamesWithOrder.push([className, order]);\n  }\n\n  return classNamesWithOrder;\n}\n\nfunction sortClasses(classStr: string, { env, ignoreFirst = false, ignoreLast = false }: { env: { context: any } }) {\n  if (typeof classStr !== 'string' || classStr === '') {\n    return classStr;\n  }\n\n  // Ignore class attributes containing `{{`, to match Prettier behaviour:\n  // https://github.com/prettier/prettier/blob/main/src/language-html/embed.js#L83-L88\n  if (classStr.includes('{{')) {\n    return classStr;\n  }\n\n  let result = '';\n  let parts = classStr.split(separatorRegEx);\n  let classes = parts.filter((_, i) => i % 2 === 0);\n  let whitespace = parts.filter((_, i) => i % 2 !== 0);\n\n  if (classes[classes.length - 1] === '') {\n    classes.pop();\n  }\n\n  let prefix = '';\n  if (ignoreFirst) {\n    prefix = `${classes.shift() ?? ''}${whitespace.shift() ?? ''}`;\n  }\n\n  let suffix = '';\n  if (ignoreLast) {\n    suffix = `${whitespace.pop() ?? ''}${classes.pop() ?? ''}`;\n  }\n\n  let classNamesWithOrder = env.context.getClassOrder\n    ? env.context.getClassOrder(classes)\n    : getClassOrderPolyfill(classes, { env });\n\n  classes = classNamesWithOrder\n    .sort(([, a], [, z]) => {\n      if (a === z) return 0;\n      // if (a === null) return options.unknownClassPosition === 'start' ? -1 : 1\n      // if (z === null) return options.unknownClassPosition === 'start' ? 1 : -1\n      if (a === null) return -1;\n      if (z === null) return 1;\n      return bigSign(a - z);\n    })\n    .map(([className]) => className);\n\n  for (let i = 0; i < classes.length; i++) {\n    result += `${classes[i]}${whitespace[i] ?? ''}`;\n  }\n\n  return prefix + result + suffix;\n}\n\n/**\n *\n * @param {Array} unordered the unordered classnames\n * @param  context\n * @returns {Array} the ordered classnames\n */\nfunction order(unordered: any[], context: any) {\n  const sorted = sortClasses(unordered.join(' '), { env: { context: context } });\n  return sorted;\n}\n\nexport default order;\n","'use strict';\n\nfunction removeDuplicatesFromClassnamesAndWhitespaces(\n  orderedClassNames: string[],\n  whitespaces: string[],\n  headSpace: boolean,\n  tailSpace: boolean\n) {\n  let previous = orderedClassNames[0];\n  const offset = (!headSpace && !tailSpace) || tailSpace ? -1 : 0;\n  for (let i = 1; i < orderedClassNames.length; i++) {\n    const cls = orderedClassNames[i];\n    // This function assumes that the list of classNames is ordered, so just comparing to the previous className is enough\n    if (cls === previous) {\n      orderedClassNames.splice(i, 1);\n      whitespaces.splice(i + offset, 1);\n      i--;\n    }\n    previous = cls;\n  }\n}\n\nexport default removeDuplicatesFromClassnamesAndWhitespaces;\n","'use strict';\nlet resolveDefaultConfigPathAlias: (() => any) | null;\n\ntry {\n  const { resolveDefaultConfigPath } = require('tailwindcss/lib/util/resolveConfigPath');\n  resolveDefaultConfigPathAlias = resolveDefaultConfigPath;\n} catch (err) {\n  resolveDefaultConfigPathAlias = null;\n}\n\nfunction getOption(context, name: string) {\n  // Options (defined at rule level)\n  const options = context.options[0] || {};\n  if (options[name] != undefined) {\n    return options[name];\n  }\n  // Settings (defined at plugin level, shared accross rules)\n  if (context.settings && context.settings.tailwindcss && context.settings.tailwindcss[name] != undefined) {\n    return context.settings.tailwindcss[name];\n  }\n  // Fallback to defaults\n  switch (name) {\n    case 'callees':\n      return ['classnames', 'clsx', 'ctl', 'cva', 'tv'];\n    case 'ignoredKeys':\n      return ['compoundVariants', 'defaultVariants'];\n    case 'classRegex':\n      return '^class(Name)?$';\n    case 'config':\n      if (resolveDefaultConfigPathAlias === null) {\n        return 'tailwind.config.js';\n      } else {\n        return resolveDefaultConfigPathAlias();\n      }\n    case 'cssFiles':\n      return ['**/*.css', '!**/node_modules', '!**/.*', '!**/dist', '!**/build'];\n    case 'cssFilesRefreshRate':\n      return 5_000;\n    case 'removeDuplicates':\n      return true;\n    case 'skipClassAttribute':\n      return false;\n    case 'tags':\n      return [];\n    case 'whitelist':\n      return [];\n  }\n}\n\nexport default getOption;\n","/**\n * @fileoverview Use a consistent orders for the Tailwind CSS classnames, based on property then on variants\n * @author François Massart\n */\n'use strict';\n\nimport astUtil from '../util/ast';\nimport customConfig from '../util/customConfig';\nimport docsUrl from '../util/docsUrl';\nimport parserUtil from '../util/parser';\nimport order from '../util/prettier/order';\nimport removeDuplicatesFromClassnamesAndWhitespaces from '../util/removeDuplicatesFromClassnamesAndWhitespaces';\nimport getOption from '../util/settings';\nconst createContextFallback = require('tailwindcss/lib/lib/setupContextUtils').createContext;\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n// Predefine message for use in context.report conditional.\n// messageId will still be usable in tests.\nconst INVALID_CLASSNAMES_ORDER_MSG = 'Invalid Tailwind CSS classnames order';\n\nconst contextFallbackCache = new WeakMap();\n\nexport default {\n  meta: {\n    docs: {\n      description: 'Enforce a consistent and logical order of the Tailwind CSS classnames',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('classnames-order'),\n    },\n    messages: {\n      invalidOrder: INVALID_CLASSNAMES_ORDER_MSG,\n    },\n    fixable: 'code',\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          callees: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          ignoredKeys: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          config: {\n            // returned from `loadConfig()` utility\n            type: ['string', 'object'],\n          },\n          removeDuplicates: {\n            // default: true,\n            type: 'boolean',\n          },\n          tags: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n        },\n      },\n    ],\n  },\n\n  create: function (context) {\n    const callees = getOption(context, 'callees');\n    const skipClassAttribute = getOption(context, 'skipClassAttribute');\n    const tags = getOption(context, 'tags');\n    const twConfig = getOption(context, 'config');\n    const classRegex = getOption(context, 'classRegex');\n    const removeDuplicates = getOption(context, 'removeDuplicates');\n\n    const mergedConfig = customConfig.resolve(twConfig);\n    const contextFallback = // Set the created contextFallback in the cache if it does not exist yet.\n      (\n        contextFallbackCache.has(mergedConfig)\n          ? contextFallbackCache\n          : contextFallbackCache.set(mergedConfig, createContextFallback(mergedConfig))\n      ).get(mergedConfig);\n\n    //----------------------------------------------------------------------\n    // Helpers\n    //----------------------------------------------------------------------\n    /**\n     * Recursive function crawling into child nodes\n     * @param {ASTNode} node The root node of the current parsing\n     * @param {ASTNode} arg The child node of node\n     * @returns {void}\n     */\n    const sortNodeArgumentValue = (node, arg = null) => {\n      let originalClassNamesValue = null;\n      let start = null;\n      let end = null;\n      let prefix = '';\n      let suffix = '';\n      if (arg === null) {\n        originalClassNamesValue = astUtil.extractValueFromNode(node);\n        const range = astUtil.extractRangeFromNode(node);\n        if (node.type === 'TextAttribute') {\n          start = range[0];\n          end = range[1];\n        } else {\n          start = range[0] + 1;\n          end = range[1] - 1;\n        }\n      } else {\n        switch (arg.type) {\n          case 'Identifier':\n            return;\n          case 'TemplateLiteral':\n            arg.expressions.forEach((exp) => {\n              sortNodeArgumentValue(node, exp);\n            });\n            arg.quasis.forEach((quasis) => {\n              sortNodeArgumentValue(node, quasis);\n            });\n            return;\n          case 'ConditionalExpression':\n            sortNodeArgumentValue(node, arg.consequent);\n            sortNodeArgumentValue(node, arg.alternate);\n            return;\n          case 'LogicalExpression':\n            sortNodeArgumentValue(node, arg.right);\n            return;\n          case 'ArrayExpression':\n            arg.elements.forEach((el) => {\n              sortNodeArgumentValue(node, el);\n            });\n            return;\n          case 'ObjectExpression':\n            const isUsedByClassNamesPlugin = node.callee && node.callee.name === 'classnames';\n            const isVue = node.key && node.key.type === 'VDirectiveKey';\n            arg.properties.forEach((prop) => {\n              const propVal = isUsedByClassNamesPlugin || isVue ? prop.key : prop.value;\n              sortNodeArgumentValue(node, propVal);\n            });\n            return;\n          case 'Property':\n            sortNodeArgumentValue(node, arg.key);\n            break;\n          case 'Literal':\n            originalClassNamesValue = arg.value;\n            start = arg.range[0] + 1;\n            end = arg.range[1] - 1;\n            break;\n          case 'TemplateElement':\n            originalClassNamesValue = arg.value.raw;\n            if (originalClassNamesValue === '') {\n              return;\n            }\n            start = arg.range[0];\n            end = arg.range[1];\n            // https://github.com/eslint/eslint/issues/13360\n            // The problem is that range computation includes the backticks (`test`)\n            // but value.raw does not include them, so there is a mismatch.\n            // start/end does not include the backticks, therefore it matches value.raw.\n            const txt = context.getSourceCode().getText(arg);\n            prefix = astUtil.getTemplateElementPrefix(txt, originalClassNamesValue);\n            suffix = astUtil.getTemplateElementSuffix(txt, originalClassNamesValue);\n            originalClassNamesValue = astUtil.getTemplateElementBody(txt, prefix, suffix);\n            break;\n        }\n      }\n\n      let { classNames, whitespaces, headSpace, tailSpace } =\n        astUtil.extractClassnamesFromValue(originalClassNamesValue);\n\n      if (classNames.length <= 1) {\n        // Don't run sorting for a single or empty className\n        return;\n      }\n\n      let orderedClassNames = order(classNames, contextFallback).split(' ');\n\n      if (removeDuplicates) {\n        removeDuplicatesFromClassnamesAndWhitespaces(orderedClassNames, whitespaces, headSpace, tailSpace);\n      }\n\n      // Generates the validated/sorted attribute value\n      let validatedClassNamesValue = '';\n      for (let i = 0; i < orderedClassNames.length; i++) {\n        const w = whitespaces[i] ?? '';\n        const cls = orderedClassNames[i];\n        validatedClassNamesValue += headSpace ? `${w}${cls}` : `${cls}${w}`;\n        if (headSpace && tailSpace && i === orderedClassNames.length - 1) {\n          validatedClassNamesValue += whitespaces[whitespaces.length - 1] ?? '';\n        }\n      }\n\n      if (originalClassNamesValue !== validatedClassNamesValue) {\n        validatedClassNamesValue = prefix + validatedClassNamesValue + suffix;\n        context.report({\n          node: node,\n          messageId: 'invalidOrder',\n          fix: function (fixer) {\n            return fixer.replaceTextRange([start, end], validatedClassNamesValue);\n          },\n        });\n      }\n    };\n\n    //----------------------------------------------------------------------\n    // Public\n    //----------------------------------------------------------------------\n\n    const attributeVisitor = function (node) {\n      if (!astUtil.isClassAttribute(node, classRegex) || skipClassAttribute) {\n        return;\n      }\n      if (astUtil.isLiteralAttributeValue(node)) {\n        sortNodeArgumentValue(node);\n      } else if (node.value && node.value.type === 'JSXExpressionContainer') {\n        sortNodeArgumentValue(node, node.value.expression);\n      }\n    };\n\n    const callExpressionVisitor = function (node) {\n      const calleeStr = astUtil.calleeToString(node.callee);\n      if (callees.findIndex((name) => calleeStr === name) === -1) {\n        return;\n      }\n\n      node.arguments.forEach((arg) => {\n        sortNodeArgumentValue(node, arg);\n      });\n    };\n\n    const scriptVisitor = {\n      JSXAttribute: attributeVisitor,\n      TextAttribute: attributeVisitor,\n      CallExpression: callExpressionVisitor,\n      TaggedTemplateExpression: function (node) {\n        if (!tags.includes(node.tag.name ?? node.tag.object?.name ?? node.tag.callee?.name)) {\n          return;\n        }\n\n        sortNodeArgumentValue(node, node.quasi);\n      },\n    };\n    const templateVisitor = {\n      CallExpression: callExpressionVisitor,\n      /*\n      Tagged templates inside data bindings\n      https://github.com/vuejs/vue/issues/9721\n      */\n      VAttribute: function (node) {\n        switch (true) {\n          case !astUtil.isValidVueAttribute(node, classRegex):\n            return;\n          case astUtil.isVLiteralValue(node):\n            sortNodeArgumentValue(node, null);\n            break;\n          case astUtil.isArrayExpression(node):\n            node.value.expression.elements.forEach((arg) => {\n              sortNodeArgumentValue(node, arg);\n            });\n            break;\n          case astUtil.isObjectExpression(node):\n            node.value.expression.properties.forEach((prop) => {\n              sortNodeArgumentValue(node, prop);\n            });\n            break;\n        }\n      },\n    };\n\n    return parserUtil.defineTemplateBodyVisitor(context, templateVisitor, scriptVisitor);\n  },\n};\n","const units = ['deg', 'grad', 'rad', 'turn'];\n\nconst mergedAngleValues = [\n  `\\\\-?(\\\\d{1,}(\\\\.\\\\d{1,})?|\\\\.\\\\d{1,})(${units.join('|')})`,\n  `calc\\\\(.{1,}\\\\)`,\n  `var\\\\(\\\\-\\\\-[A-Za-z\\\\-]{1,}\\\\)`,\n];\n\nexport default {\n  mergedAngleValues,\n};\n","const cssNamedColors = [\n  'indianred',\n  'lightcoral',\n  'salmon',\n  'darksalmon',\n  'lightsalmon',\n  'crimson',\n  'red',\n  'firebrick',\n  'darkred',\n  'pink',\n  'lightpink',\n  'hotpink',\n  'deeppink',\n  'mediumvioletred',\n  'palevioletred',\n  'coral',\n  'tomato',\n  'orangered',\n  'darkorange',\n  'orange',\n  'gold',\n  'yellow',\n  'lightyellow',\n  'lemonchiffon',\n  'lightgoldenrodyellow',\n  'papayawhip',\n  'moccasin',\n  'peachpuff',\n  'palegoldenrod',\n  'khaki',\n  'darkkhaki',\n  'lavender',\n  'thistle',\n  'plum',\n  'violet',\n  'orchid',\n  'fuchsia',\n  'magenta',\n  'mediumorchid',\n  'mediumpurple',\n  'blueviolet',\n  'darkviolet',\n  'darkorchid',\n  'darkmagenta',\n  'purple',\n  'rebeccapurple',\n  'indigo',\n  'mediumslateblue',\n  'slateblue',\n  'darkslateblue',\n  'greenyellow',\n  'chartreuse',\n  'lawngreen',\n  'lime',\n  'limegreen',\n  'palegreen',\n  'lightgreen',\n  'mediumspringgreen',\n  'springgreen',\n  'mediumseagreen',\n  'seagreen',\n  'forestgreen',\n  'green',\n  'darkgreen',\n  'yellowgreen',\n  'olivedrab',\n  'olive',\n  'darkolivegreen',\n  'mediumaquamarine',\n  'darkseagreen',\n  'lightseagreen',\n  'darkcyan',\n  'teal',\n  'aqua',\n  'cyan',\n  'lightcyan',\n  'paleturquoise',\n  'aquamarine',\n  'turquoise',\n  'mediumturquoise',\n  'darkturquoise',\n  'cadetblue',\n  'steelblue',\n  'lightsteelblue',\n  'powderblue',\n  'lightblue',\n  'skyblue',\n  'lightskyblue',\n  'deepskyblue',\n  'dodgerblue',\n  'cornflowerblue',\n  'royalblue',\n  'blue',\n  'mediumblue',\n  'darkblue',\n  'navy',\n  'midnightblue',\n  'cornsilk',\n  'blanchedalmond',\n  'bisque',\n  'navajowhite',\n  'wheat',\n  'burlywood',\n  'tan',\n  'rosybrown',\n  'sandybrown',\n  'goldenrod',\n  'darkgoldenrod',\n  'peru',\n  'chocolate',\n  'saddlebrown',\n  'sienna',\n  'brown',\n  'maroon',\n  'white',\n  'snow',\n  'honeydew',\n  'mintcream',\n  'azure',\n  'aliceblue',\n  'ghostwhite',\n  'whitesmoke',\n  'seashell',\n  'beige',\n  'oldlace',\n  'floralwhite',\n  'ivory',\n  'antiquewhite',\n  'linen',\n  'lavenderblush',\n  'mistyrose',\n  'gainsboro',\n  'lightgray',\n  'lightgrey',\n  'silver',\n  'darkgray',\n  'darkgrey',\n  'gray',\n  'grey',\n  'dimgray',\n  'dimgrey',\n  'lightslategray',\n  'lightslategrey',\n  'slategray',\n  'slategrey',\n  'darkslategray',\n  'darkslategrey',\n  'black',\n  'transparent',\n  'currentColor',\n];\n\n// RGB[A] hexa: #123456AA, #B4DA55, #000A, #123\nconst hexRGBA = '\\\\#(([0-9A-Fa-f]{8})|([0-9A-Fa-f]{6})|([0-9A-Fa-f]{4})|([0-9A-Fa-f]{3}))';\n\n// RGB 0-255: rgb(10,20,30)\nconst RGBIntegers = 'rgb\\\\(\\\\d{1,3}\\\\,\\\\d{1,3}\\\\,\\\\d{1,3}\\\\)';\n\n// RGB %: rgb(25%,50%,75%)\nconst RGBPercentages = 'rgb\\\\(\\\\d{1,3}%\\\\,\\\\d{1,3}%\\\\,\\\\d{1,3}%\\\\)';\n\n// RGBA: rgba(50,100,255,.5), rgba(50,100,255,50%)\nconst supportedRGBA = 'rgba\\\\(\\\\d{1,3}\\\\,\\\\d{1,3}\\\\,\\\\d{1,3}\\\\,\\\\d*(\\\\.\\\\d*)?%?\\\\)';\n\nconst RGBAPercentages = 'rgba\\\\(\\\\d{1,3}%\\\\,\\\\d{1,3}%\\\\,\\\\d{1,3}%\\\\,\\\\d*(\\\\.\\\\d*)?%?\\\\)';\n\nconst optionalColorPrefixedVar = '(color\\\\:)?var\\\\(\\\\-\\\\-[A-Za-z\\\\-]{1,}\\\\)';\n\nconst mandatoryColorPrefixed = 'color\\\\:(?!(hsla\\\\()).{1,}';\n\nconst notHSLAPlusWildcard = '(?!(hsla\\\\()).{1,}';\n\n// HSL\nconst supportedHSL = 'hsl\\\\(\\\\d{1,3}%?\\\\,\\\\d{1,3}%?\\\\,\\\\d{1,3}%?\\\\)';\n\n// 'hsla\\\\(\\\\d{1,3}%?\\\\,\\\\d{1,3}%?\\\\,\\\\d{1,3}%?\\\\,\\\\d*(\\\\.\\\\d*)?%?\\\\)',\n\nconst colorValues = [hexRGBA, RGBIntegers, RGBPercentages, supportedRGBA, supportedHSL];\n\nconst mergedColorValues = [...cssNamedColors, ...colorValues];\n\nexport default {\n  cssNamedColors,\n  colorValues,\n  mergedColorValues,\n  RGBAPercentages,\n  optionalColorPrefixedVar,\n  mandatoryColorPrefixed,\n  notHSLAPlusWildcard,\n};\n","import removeDuplicatesFromArray from '../removeDuplicatesFromArray';\n\n// Units\nconst fontUnits = ['cap', 'ch', 'em', 'ex', 'ic', 'lh', 'rem', 'rlh'];\nconst viewportUnits = ['vb', 'vh', 'vi', 'vw', 'vmin', 'vmax'];\nconst absoluteUnits = ['px', 'mm', 'cm', 'in', 'pt', 'pc'];\nconst perInchUnits = ['lin', 'pt', 'mm'];\nconst otherUnits = ['%'];\nconst mergedUnits = removeDuplicatesFromArray([\n  ...fontUnits,\n  ...viewportUnits,\n  ...absoluteUnits,\n  ...perInchUnits,\n  ...otherUnits,\n]);\nconst selectedUnits = mergedUnits.filter((el) => {\n  // All units minus this blacklist\n  return !['cap', 'ic', 'vb', 'vi'].includes(el);\n});\n\nconst absoluteValues = ['0', 'xx\\\\-small', 'x\\\\-small', 'small', 'medium', 'large', 'x\\\\-large', 'xx\\\\-large'];\nconst relativeValues = ['larger', 'smaller'];\nconst globalValues = ['inherit', 'initial', 'unset'];\nconst mergedValues = [...absoluteValues, ...relativeValues, ...globalValues];\n\nconst mergedLengthValues = [`\\\\-?\\\\d*\\\\.?\\\\d*(${mergedUnits.join('|')})`, ...mergedValues];\nmergedLengthValues.push('length\\\\:var\\\\(\\\\-\\\\-[a-z\\\\-]{1,}\\\\)');\n\nconst mergedUnitsRegEx = `\\\\[(\\\\d{1,}(\\\\.\\\\d{1,})?|(\\\\.\\\\d{1,})?)(${mergedUnits.join('|')})\\\\]`;\n\nconst selectedUnitsRegEx = `\\\\[(\\\\d{1,}(\\\\.\\\\d{1,})?|(\\\\.\\\\d{1,})?)(${selectedUnits.join('|')})\\\\]`;\n\nconst anyCalcRegEx = `\\\\[calc\\\\(.{1,}\\\\)\\\\]`;\n\nconst validZeroRegEx = `^(0(\\\\.0{1,})?|\\\\.0{1,})(${mergedUnits.join('|')})?$`;\n\nexport default {\n  anyCalcRegEx,\n  mergedLengthValues,\n  mergedUnits,\n  mergedUnitsRegEx,\n  mergedValues,\n  selectedUnits,\n  selectedUnitsRegEx,\n  validZeroRegEx,\n};\n","/**\n * @fileoverview Utilities used for grouping classnames\n */\n\n'use strict';\n\n// Ambiguous values\n// ================\n// Supported hints: length, color, angle, list\n// -------------------------------------------\n//\n// border-[color/width]\n// text-[color/size]\n// ring-[color/width]\n// ring-offset-[color/width]\n// stroke-[current/width]\n// bg-[color/(position/size)]\n//\n// font-[family/weight]\n\nimport angle from './types/angle';\nimport color from './types/color';\nimport length from './types/length';\n\n/**\n * Escape special chars for regular expressions\n *\n * @param {String} str Regular expression to be escaped\n * @returns {String} Escaped version\n */\nfunction escapeSpecialChars(str: string) {\n  return str.replace(/\\W/g, '\\\\$&');\n}\n\n/**\n * Generates the opacity suffix based on config\n *\n * @param {Object} config Tailwind CSS Config\n * @returns {String} The suffix or an empty string\n */\nfunction generateOptionalOpacitySuffix(config: { theme: { [x: string]: {} } }) {\n  const opacityKeys = !config.theme['opacity'] ? [] : Object.keys(config.theme['opacity']);\n  opacityKeys.push('\\\\[(\\\\d*\\\\.?\\\\d*)%?\\\\]');\n  return `(\\\\/(${opacityKeys.join('|')}))?`;\n}\n\n/**\n * Generate the possible options for the RegEx\n *\n * @param {String} propName The name of the prop e.g. textColor\n * @param {Array} keys Keys to be injected in the options\n * @param {Object} config Tailwind CSS Config\n * @param {Boolean} isNegative If the value is negative\n * @returns {String} Generated part of regex exposing the possible values\n */\nfunction generateOptions(\n  propName: string | number,\n  keys: any[],\n  config: { darkMode: string | any[]; theme: { [x: string]: { [x: string]: any }; colors: { [x: string]: any } } },\n  isNegative = false\n) {\n  const opacitySuffixes = generateOptionalOpacitySuffix(config);\n  const genericArbitraryOption = '\\\\[(.*)\\\\]';\n  const defaultKeyIndex = keys.findIndex((v: string) => v === 'DEFAULT');\n  if (defaultKeyIndex > -1) {\n    keys.splice(defaultKeyIndex, 1);\n  }\n  const escapedKeys = keys.map((k: string) => escapeSpecialChars(k));\n  switch (propName) {\n    case 'dark':\n      // Optional `dark` class\n      if (config.darkMode === 'class') {\n        return 'dark';\n      } else if (Array.isArray(config.darkMode) && config.darkMode.length === 2 && config.darkMode[0] === 'class') {\n        // https://tailwindcss.com/docs/dark-mode#customizing-the-class-name\n        // For the sake of simplicity we only support a single class name\n        let value = '';\n        const res = /^\\.(?<classnameValue>[A-Z0-9\\:\\-\\_\\[\\d\\]]*)$/gi.exec(config.darkMode[1]);\n        if (res && res.groups) {\n          if (res.groups.classnameValue) {\n            value = res.groups.classnameValue;\n          }\n        }\n        return value;\n      } else {\n        return '';\n      }\n    case 'arbitraryProperties':\n      escapedKeys.push(genericArbitraryOption);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'colors':\n    case 'accentColor':\n    case 'borderColor':\n    case 'boxShadowColor':\n    case 'divideColor':\n    case 'fill':\n    case 'outlineColor':\n    case 'textColor':\n    case 'stroke':\n    case 'gradientColorStopPositions':\n      // Colors can use segments like 'indigo' and 'indigo-light'\n      // https://tailwindcss.com/docs/customizing-colors#color-object-syntax\n      const options = [];\n      keys.forEach((k: string) => {\n        const color = config.theme[propName][k] || config.theme.colors[k];\n        if (typeof color === 'string') {\n          options.push(escapeSpecialChars(k) + opacitySuffixes);\n        } else {\n          const variants = Object.keys(color).map((colorKey) => escapeSpecialChars(colorKey));\n          const defaultIndex = variants.findIndex((v) => v === 'DEFAULT');\n          const hasDefault = defaultIndex > -1;\n          if (hasDefault) {\n            variants.splice(defaultIndex, 1);\n          }\n          options.push(k + '(\\\\-(' + variants.join('|') + '))' + (hasDefault ? '?' : '') + opacitySuffixes);\n        }\n      });\n      const arbitraryColors = [...color.mergedColorValues];\n      switch (propName) {\n        case 'fill':\n          // Forbidden prefixes\n          arbitraryColors.push(`(?!(angle|length|list)\\:).{1,}`);\n          break;\n        case 'gradientColorStopPositions':\n          arbitraryColors.push(color.RGBAPercentages); // RGBA % 0.5[%]\n          arbitraryColors.push(color.optionalColorPrefixedVar);\n          arbitraryColors.push(color.notHSLAPlusWildcard);\n          break;\n        case 'textColor':\n          arbitraryColors.push(color.RGBAPercentages); // RGBA % 0.5[%]\n          arbitraryColors.push(color.mandatoryColorPrefixed);\n          break;\n        default:\n          arbitraryColors.push(color.mandatoryColorPrefixed);\n      }\n      options.push(`\\\\[(${arbitraryColors.join('|')})\\\\]`);\n      return '(' + options.join('|') + ')';\n    case 'borderSpacing':\n    case 'borderWidth':\n    case 'divideWidth':\n    case 'fontSize':\n    case 'outlineWidth':\n    case 'outlineOffset':\n    case 'ringWidth':\n    case 'ringOffsetWidth':\n    case 'textUnderlineOffset':\n      escapedKeys.push(length.selectedUnitsRegEx);\n      escapedKeys.push(length.anyCalcRegEx);\n      // Mandatory `length:` prefix + wildcard\n      escapedKeys.push(`\\\\[length\\\\:.{1,}\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'strokeWidth':\n      escapedKeys.push(length.selectedUnitsRegEx);\n      escapedKeys.push(length.anyCalcRegEx);\n      // Mandatory `length:` prefix + calc + wildcard\n      escapedKeys.push(`\\\\[length\\\\:calc\\\\(.{1,}\\\\)\\\\]`);\n      // Mandatory `length:` prefix + wildcard + optional units\n      escapedKeys.push(`\\\\[length\\\\:(.{1,})(${length.selectedUnits.join('|')})?\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'gap':\n    case 'height':\n    case 'lineHeight':\n    case 'maxHeight':\n    case 'size':\n    case 'maxWidth':\n    case 'minHeight':\n    case 'minWidth':\n    case 'padding':\n    case 'width':\n    case 'blur':\n    case 'brightness':\n    case 'contrast':\n    case 'grayscale':\n    case 'invert':\n    case 'saturate':\n    case 'sepia':\n    case 'backdropBlur':\n    case 'backdropBrightness':\n    case 'backdropContrast':\n    case 'backdropGrayscale':\n    case 'backdropInvert':\n    case 'backdropOpacity':\n    case 'backdropSaturate':\n    case 'backdropSepia':\n    case 'transitionDuration':\n    case 'transitionTimingFunction':\n    case 'transitionDelay':\n    case 'animation':\n    case 'transformOrigin':\n    case 'scale':\n    case 'cursor':\n      // All units\n      escapedKeys.push(length.mergedUnitsRegEx);\n      // Forbidden prefixes\n      escapedKeys.push(`\\\\[(?!(angle|color|length|list)\\:).{1,}\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'backdropHueRotate':\n    case 'hueRotate':\n    case 'inset':\n    case 'letterSpacing':\n    case 'margin':\n    case 'scrollMargin':\n    case 'skew':\n    case 'space':\n    case 'textIndent':\n    case 'translate':\n      // All units\n      escapedKeys.push(length.mergedUnitsRegEx);\n      // Forbidden prefixes\n      escapedKeys.push(`\\\\[(?!(angle|color|length|list)\\:).{1,}\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'backgroundOpacity':\n    case 'borderOpacity':\n    case 'opacity':\n    case 'ringOpacity':\n      // 0 ... .5 ... 1\n      escapedKeys.push(`\\\\[(0(\\\\.\\\\d{1,})?|\\\\.\\\\d{1,}|1)\\\\]`);\n      escapedKeys.push(length.anyCalcRegEx);\n      // Unprefixed var()\n      escapedKeys.push(`\\\\[var\\\\(\\\\-\\\\-[A-Za-z\\\\-]{1,}\\\\)\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'rotate':\n      escapedKeys.push(`\\\\[(${angle.mergedAngleValues.join('|')})\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'gridTemplateColumns':\n    case 'gridColumn':\n    case 'gridColumnStart':\n    case 'gridColumnEnd':\n    case 'gridTemplateRows':\n    case 'gridRow':\n    case 'gridRowStart':\n    case 'gridRowEnd':\n    case 'gridAutoColumns':\n    case 'gridAutoRows':\n      // Forbidden prefixes\n      escapedKeys.push(`\\\\[(?!(angle|color|length)\\:).{1,}\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'listStyleType':\n      // Forbidden prefixes\n      escapedKeys.push(`\\\\[(?!(angle|color|length|list)\\:).{1,}\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'objectPosition':\n      // Forbidden prefixes\n      escapedKeys.push(`\\\\[(?!(angle|color|length)\\:).{1,}\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'backgroundPosition':\n    case 'boxShadow':\n    case 'dropShadow':\n    case 'transitionProperty':\n      // Forbidden prefixes\n      escapedKeys.push(`\\\\[(?!((angle|color|length|list)\\:)|#|var\\\\().{1,}\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'backgroundSize':\n      // Forbidden prefixes\n      escapedKeys.push(`\\\\[length\\:.{1,}\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'backgroundImageUrl':\n      // Forbidden prefixes\n      escapedKeys.push(`.{1,}`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'backgroundImage':\n      // Forbidden prefixes\n      escapedKeys.push(`\\\\[url\\\\(.{1,}\\\\)\\\\]`);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'order':\n    case 'zIndex':\n      escapedKeys.push(genericArbitraryOption);\n      return '(' + escapedKeys.join('|') + ')';\n    case 'fontWeight':\n    case 'typography':\n    case 'lineClamp':\n      // Cannot be arbitrary?\n      return '(' + escapedKeys.join('|') + ')';\n    case 'aspectRatio':\n    case 'flexGrow':\n    case 'flexShrink':\n    case 'fontFamily':\n    case 'flex':\n    case 'borderRadius':\n    default:\n      escapedKeys.push(genericArbitraryOption);\n      return '(' + escapedKeys.join('|') + ')';\n  }\n}\n\nconst cachedRegexes = new WeakMap();\n\n/**\n * Customize the regex based on config\n *\n * @param {String} re Regular expression\n * @param {Object} config The merged Tailwind CSS config\n * @returns {String} Patched version with config values and additional parameters\n */\nfunction patchRegex(re: string, config): string {\n  if (!cachedRegexes.has(config)) {\n    cachedRegexes.set(config, {});\n  }\n  const cache = cachedRegexes.get(config);\n  if (re in cache) {\n    return cache[re];\n  }\n  let patched = '\\\\!?';\n  // Prefix\n  if (config.prefix.length) {\n    patched += escapeSpecialChars(config.prefix);\n  }\n  // Props\n  let replaced = re;\n  const propsRe = /\\$\\{(\\-?[a-z]*)\\}/gi;\n  const res = replaced.matchAll(propsRe);\n  const resArray = [...res];\n  const props = resArray.map((arr) => arr[1]);\n  if (props.length === 0) {\n    return (cache[re] = `${patched}(${replaced})`);\n  }\n  // e.g. backgroundColor, letterSpacing, -margin...\n  props.forEach((prop) => {\n    const token = new RegExp('\\\\$\\\\{' + prop + '\\\\}');\n    const isNegative = prop.substr(0, 1) === '-';\n    const absoluteProp = isNegative ? prop.substr(1) : prop;\n    if (prop === 'dark') {\n      // Special case, not a default property from the theme\n      replaced = replaced.replace(token, generateOptions(absoluteProp, [], config, isNegative));\n      return `${patched}(${replaced})`;\n    } else if (prop === 'arbitraryProperties') {\n      // Special case\n      replaced = replaced.replace(\n        new RegExp('\\\\$\\\\{' + absoluteProp + '\\\\}'),\n        generateOptions(absoluteProp, [], config, isNegative)\n      );\n      return `${patched}(${replaced})`;\n    } else if (prop === 'backgroundImageUrl') {\n      // Special case\n      replaced = replaced.replace(new RegExp('\\\\$\\\\{' + prop + '\\\\}'), generateOptions(prop, [], config, false));\n      return `${patched}(${replaced})`;\n    } else if (!config.theme || !config.theme[absoluteProp]) {\n      // prop not found in config\n      return;\n    }\n    // Normal scenario\n    const keys = Object.keys(config.theme[absoluteProp])\n      .filter((key) => {\n        if (isNegative) {\n          // Negative prop cannot support NaN values and inherits positive values\n          const val = config.theme[absoluteProp][key];\n          const isCalc = typeof val === 'string' && val.indexOf('calc') === 0;\n          const num = parseFloat(val);\n          if (isCalc) {\n            return true;\n          }\n          if (isNaN(num)) {\n            return false;\n          }\n        } else if (key[0] === '-') {\n          // Positive prop cannot use key starting with '-'\n          return false;\n        }\n        return true;\n      })\n      .map((key) => {\n        if (isNegative && key[0] === '-') {\n          return key.substring(1);\n        }\n        return key;\n      });\n    if (keys.length === 0 || replaced.match(token) === null) {\n      // empty array\n      return;\n    }\n    const opts = generateOptions(absoluteProp, keys, config, isNegative);\n    replaced = replaced.replace(token, opts);\n  });\n  return (cache[re] = `${patched}(${replaced})`);\n}\n\n/**\n * Generates a flatten array from the groups config\n *\n * @param {Array} groupsConfig The array of objects containing the regex\n * @param {Object} twConfig The merged config of Tailwind CSS\n * @returns {Array} Flatten array\n */\nfunction getGroups(groupsConfig: any[], twConfig = null) {\n  const groups: any[] = [];\n  groupsConfig.forEach((group: { members: any[] }) => {\n    // e.g. SIZING or SPACING\n    group.members.forEach((prop: { members: any[] }) => {\n      // e.g. Width or Padding\n      if (typeof prop.members === 'string') {\n        // Unique property, like `width` limited to one value\n        groups.push(prop.members);\n      } else {\n        // Multiple properties, like `padding`, `padding-top`...\n        prop.members.forEach((subprop: { members: any }) => {\n          groups.push(subprop.members);\n        });\n      }\n    });\n  });\n  if (twConfig === null) {\n    return groups;\n  }\n  return groups.map((re) => patchRegex(re, twConfig));\n}\n\n/**\n * Generates an array of empty arrays prior to grouping\n *\n * @param {Array} groups The array of objects containing the regex\n * @returns {Array} Array of empty arrays\n */\nfunction initGroupSlots(groups: any[]) {\n  const slots: never[][] = [];\n  groups.forEach((g: any) => slots.push([]));\n  return slots;\n}\n\n/**\n * Searches for a match between classname and Tailwind CSS group\n *\n * @param {Array} name The target classname\n * @param {Array} arr The flatten array containing the regex\n * @param {String} separator The delimiter to be used between variants\n * @returns {Array} Array of empty arrays\n */\nfunction getGroupIndex(name: any, arr: any[], separator = ':') {\n  const classSuffix = getSuffix(name, separator);\n  let idx = arr.findIndex((pattern: any) => {\n    const classRe = new RegExp(`^(${pattern})$`);\n    return classRe.test(classSuffix);\n  }, classSuffix);\n  return idx;\n}\n\n/**\n * Generates a flatten array from the groups configKeys\n *\n * @param {Array} groupsConfig The array of objects containing the regex\n * @param {Object} twConfig The merged config of Tailwind CSS\n * @returns {Array} Flatten array\n */\nfunction getGroupConfigKeys(groupsConfig: any[]) {\n  const groups: any[] = [];\n  groupsConfig.forEach((group: { members: any[] }) => {\n    // e.g. SIZING or SPACING\n    group.members.forEach((prop: { members: any[]; configKey: any }) => {\n      // e.g. Width or Padding\n      if (typeof prop.members === 'string') {\n        // Unique property, like `width` limited to one value\n        groups.push(prop.configKey ? prop.configKey : null);\n      } else {\n        // Multiple properties, like `padding`, `padding-top`...\n        prop.members.forEach((subprop: { configKey: any }) => {\n          groups.push(subprop.configKey ? subprop.configKey : null);\n        });\n      }\n    });\n  });\n  return groups;\n}\n\n/**\n * Returns the prefix (variants) of a className including the separator or an empty string if none\n *\n * @param {String} name Classname to be parsed\n * @param {String} separator The separator character as in config\n * @returns {String} The prefix\n */\nfunction getPrefix(name: string, separator: string | any[]) {\n  const rootSeparator = String.raw`(?<!\\[[a-z0-9\\-]*)(${separator})(?![a-z0-9\\-]*\\])`;\n  const rootSeparatorRegex = new RegExp(rootSeparator);\n  let classname = name;\n  let index = 0;\n  let results;\n  while ((results = rootSeparatorRegex.exec(classname)) !== null) {\n    const newIndex = results.index + separator.length;\n    index += newIndex;\n    classname = classname.substring(newIndex);\n  }\n\n  return index ? name.substring(0, index) : '';\n}\n\n/**\n * Returns the arbitrary property of className without the separator or an empty string if none\n * e.g. \"[mask-type:luminance]\" => \"mask-type\"\n *\n * @see https://tailwindcss.com/docs/adding-custom-styles#arbitrary-properties\n * @param {String} name Classname suffix (without it variants) to be parsed\n * @param {String} separator The separator character as in config\n * @returns {String} The arbitrary property\n */\nfunction getArbitraryProperty(name: string, separator: any) {\n  const arbitraryPropPattern = String.raw`^\\[([a-z\\-]*)${separator}\\.*`;\n  const arbitraryPropRegExp = new RegExp(arbitraryPropPattern);\n  const results = arbitraryPropRegExp.exec(name);\n  return results === null ? '' : results[1];\n}\n\n/**\n * Get the last part of the full classname\n * e.g. \"lg:w-[100px]\" => \"w-[100px]\"\n *\n * @param {String} className The target classname\n * @param {String} separator The delimiter to be used between variants\n * @returns {String} The classname without its variants\n */\nfunction getSuffix(className: string, separator = ':') {\n  const prefix = getPrefix(className, separator);\n  return className.substring(prefix.length);\n}\n\n/**\n * Find the group of a classname\n *\n * @param {String} name Classname to be find using patterns (without modifiers)\n * @param {Array} group The group being tested\n * @param {Object} config Tailwind CSS config\n * @param {String} parentType The name of the parent group\n * @returns {Object} The infos\n */\nfunction findInGroup(name: string, group: { members: any[]; type: null | undefined }, config: any, parentType = null) {\n  if (typeof group.members === 'string') {\n    const pattern = patchRegex(group.members, config);\n    const classRe = new RegExp(`^(${pattern})$`);\n    if (classRe.test(name)) {\n      const res = classRe.exec(name);\n      let value = '';\n      if (res && res.groups) {\n        if (res.groups.value) {\n          value = res.groups.value;\n        }\n        if (res.groups.negativeValue) {\n          value = '-' + res.groups.negativeValue;\n        }\n      }\n      return {\n        group: parentType,\n        ...group,\n        value: value,\n      };\n    } else {\n      return null;\n    }\n  } else {\n    const innerGroup = group.members.find((v: any) => findInGroup(name, v, config, group.type));\n    if (!innerGroup) {\n      return null;\n    } else {\n      return findInGroup(name, innerGroup, config, group.type);\n    }\n  }\n}\n\n/**\n * Returns an object with parsed properties\n *\n * @param {String} name Classname to be parsed\n * @param {Array} arr The flatten array containing the regex\n * @param {Object} config The Tailwind CSS config\n * @param {Number} index The index\n * @returns {Object} Parsed infos\n */\nfunction parseClassname(name: string, arr: any[], config: { separator: string | undefined }, index = null) {\n  const leadingRe = new RegExp('^(?<leading>\\\\s*)');\n  const trailingRe = new RegExp('(?<trailing>\\\\s*)$');\n  let leading = '';\n  let core = '';\n  let trailing = '';\n  const leadingRes = leadingRe.exec(name);\n  if (leadingRes && leadingRes.groups) {\n    leading = leadingRes.groups.leading || '';\n  }\n  const trailingRes = trailingRe.exec(name);\n  if (trailingRes && trailingRes.groups) {\n    trailing = trailingRes.groups.trailing || '';\n  }\n  core = name.substring(leading.length, name.length - trailing.length);\n  const variants = getPrefix(core, config.separator);\n  const classSuffix = getSuffix(core, config.separator);\n  let slot = null;\n  arr.forEach((group: any) => {\n    if (slot === null) {\n      const found = findInGroup(classSuffix, group, config);\n      if (found) {\n        slot = found;\n      }\n    }\n  });\n  const value = slot ? slot.value : '';\n  const isNegative = value[0] === '-';\n  const off = isNegative ? 1 : 0;\n  const body = core.substr(0, core.length - value.length + off).substr(variants.length + off);\n  return {\n    index: index,\n    name: core,\n    variants: variants,\n    parentType: slot ? slot.group : '',\n    body: body,\n    value: value,\n    shorthand: slot && slot.shorthand ? slot.shorthand : '',\n    leading: leading,\n    trailing: trailing,\n    important: body.substr(0, 1) === '!',\n  };\n}\n\nexport default {\n  initGroupSlots,\n  getArbitraryProperty,\n  getGroups,\n  getGroupIndex,\n  getGroupConfigKeys,\n  getPrefix,\n  getSuffix,\n  parseClassname,\n};\n","/**\n * @fileoverview Warns about `-` prefixed classnames using arbitrary values\n * @author François Massart\n */\n'use strict';\n\nimport astUtil from '../util/ast';\nimport customConfig from '../util/customConfig';\nimport docsUrl from '../util/docsUrl';\nimport groupUtil from '../util/groupMethods';\nimport parserUtil from '../util/parser';\nimport getOption from '../util/settings';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n// Predefine message for use in context.report conditional.\n// messageId will still be usable in tests.\nconst NEGATIVE_ARBITRARY_VALUE = `Arbitrary value classname '{{classname}}' should not start with a dash (-)`;\n\nexport default {\n  meta: {\n    docs: {\n      description: 'Warns about dash prefixed classnames using arbitrary values',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('enforces-negative-arbitrary-values'),\n    },\n    messages: {\n      negativeArbitraryValue: NEGATIVE_ARBITRARY_VALUE,\n    },\n    fixable: null,\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          callees: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          ignoredKeys: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          config: {\n            // returned from `loadConfig()` utility\n            type: ['string', 'object'],\n          },\n          tags: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n        },\n      },\n    ],\n  },\n\n  create: function (context) {\n    const callees = getOption(context, 'callees');\n    const skipClassAttribute = getOption(context, 'skipClassAttribute');\n    const tags = getOption(context, 'tags');\n    const twConfig = getOption(context, 'config');\n    const classRegex = getOption(context, 'classRegex');\n\n    const mergedConfig = customConfig.resolve(twConfig);\n\n    //----------------------------------------------------------------------\n    // Helpers\n    //----------------------------------------------------------------------\n\n    /**\n     * Recursive function crawling into child nodes\n     * @param {ASTNode} node The root node of the current parsing\n     * @param {ASTNode} arg The child node of node\n     * @returns {void}\n     */\n    const parseForNegativeArbitraryClassNames = (node, arg = null) => {\n      let originalClassNamesValue = null;\n      if (arg === null) {\n        originalClassNamesValue = astUtil.extractValueFromNode(node);\n      } else {\n        switch (arg.type) {\n          case 'Identifier':\n            return;\n          case 'TemplateLiteral':\n            arg.expressions.forEach((exp) => {\n              parseForNegativeArbitraryClassNames(node, exp);\n            });\n            arg.quasis.forEach((quasis) => {\n              parseForNegativeArbitraryClassNames(node, quasis);\n            });\n            return;\n          case 'ConditionalExpression':\n            parseForNegativeArbitraryClassNames(node, arg.consequent);\n            parseForNegativeArbitraryClassNames(node, arg.alternate);\n            return;\n          case 'LogicalExpression':\n            parseForNegativeArbitraryClassNames(node, arg.right);\n            return;\n          case 'ArrayExpression':\n            arg.elements.forEach((el) => {\n              parseForNegativeArbitraryClassNames(node, el);\n            });\n            return;\n          case 'ObjectExpression':\n            const isUsedByClassNamesPlugin = node.callee && node.callee.name === 'classnames';\n            const isVue = node.key && node.key.type === 'VDirectiveKey';\n            arg.properties.forEach((prop) => {\n              const propVal = isUsedByClassNamesPlugin || isVue ? prop.key : prop.value;\n              parseForNegativeArbitraryClassNames(node, propVal);\n            });\n            return;\n          case 'Property':\n            parseForNegativeArbitraryClassNames(node, arg.key);\n            return;\n          case 'Literal':\n            originalClassNamesValue = arg.value;\n            break;\n          case 'TemplateElement':\n            originalClassNamesValue = arg.value.raw;\n            if (originalClassNamesValue === '') {\n              return;\n            }\n            break;\n        }\n      }\n\n      let { classNames } = astUtil.extractClassnamesFromValue(originalClassNamesValue);\n\n      const detected = classNames.filter((cls) => {\n        const suffix = groupUtil.getSuffix(cls, mergedConfig.separator);\n        const negArbitraryValRegEx =\n          /^\\-((inset|scale)(\\-(y|x))?|top|right|bottom|left|top|z|order|(scroll\\-)?m(y|x|t|r|l|b)?|(skew|space|translate)\\-(y|x)|rotate|tracking|indent|(backdrop\\-)?hue\\-rotate)\\-\\[.*\\]$/i;\n        return negArbitraryValRegEx.test(suffix);\n      });\n\n      detected.forEach((className) => {\n        context.report({\n          node,\n          messageId: 'negativeArbitraryValue',\n          data: {\n            classname: className,\n          },\n        });\n      });\n    };\n\n    //----------------------------------------------------------------------\n    // Public\n    //----------------------------------------------------------------------\n\n    const attributeVisitor = function (node) {\n      if (!astUtil.isClassAttribute(node, classRegex) || skipClassAttribute) {\n        return;\n      }\n      if (astUtil.isLiteralAttributeValue(node)) {\n        parseForNegativeArbitraryClassNames(node);\n      } else if (node.value && node.value.type === 'JSXExpressionContainer') {\n        parseForNegativeArbitraryClassNames(node, node.value.expression);\n      }\n    };\n\n    const callExpressionVisitor = function (node) {\n      const calleeStr = astUtil.calleeToString(node.callee);\n      if (callees.findIndex((name) => calleeStr === name) === -1) {\n        return;\n      }\n      node.arguments.forEach((arg) => {\n        parseForNegativeArbitraryClassNames(node, arg);\n      });\n    };\n\n    const scriptVisitor = {\n      JSXAttribute: attributeVisitor,\n      TextAttribute: attributeVisitor,\n      CallExpression: callExpressionVisitor,\n      TaggedTemplateExpression: function (node) {\n        if (!tags.includes(node.tag.name ?? node.tag.object?.name ?? node.tag.callee?.name)) {\n          return;\n        }\n        parseForNegativeArbitraryClassNames(node, node.quasi);\n      },\n    };\n\n    const templateVisitor = {\n      CallExpression: callExpressionVisitor,\n      /*\n      Tagged templates inside data bindings\n      https://github.com/vuejs/vue/issues/9721\n      */\n      VAttribute: function (node) {\n        switch (true) {\n          case !astUtil.isValidVueAttribute(node, classRegex):\n            return;\n          case astUtil.isVLiteralValue(node):\n            parseForNegativeArbitraryClassNames(node);\n            break;\n          case astUtil.isArrayExpression(node):\n            node.value.expression.elements.forEach((arg) => {\n              parseForNegativeArbitraryClassNames(node, arg);\n            });\n            break;\n          case astUtil.isObjectExpression(node):\n            node.value.expression.properties.forEach((prop) => {\n              parseForNegativeArbitraryClassNames(node, prop);\n            });\n            break;\n        }\n      },\n    };\n\n    return parserUtil.defineTemplateBodyVisitor(context, templateVisitor, scriptVisitor);\n  },\n};\n","/**\n * @fileoverview Default groups for Tailwind CSS classnames\n * @description The hierarchy of `members` can be useful to detect redundant and/or contradicting classnames\n * @version v3.1.3\n * @see https://tailwindcss.com/docs\n * @author François Massart\n */\nexport const groups = [\n  {\n    type: 'Core Concepts',\n    members: [\n      {\n        type: 'Hover, Focus, & Other States',\n        members: [\n          {\n            type: 'group',\n            members: 'group',\n          },\n          {\n            type: 'peer',\n            members: 'peer',\n          },\n        ],\n      },\n      {\n        type: 'Dark Mode',\n        members: '${dark}',\n      },\n      {\n        type: 'Arbitrary properties',\n        members: '${arbitraryProperties}',\n      },\n    ],\n  },\n  {\n    type: 'Layout',\n    members: [\n      {\n        type: 'Aspect Ratio',\n        members: 'aspect\\\\-(?<value>${aspectRatio})',\n        configKey: 'aspectRatio',\n      },\n      {\n        type: 'Container',\n        members: 'container',\n      },\n      {\n        type: 'Columns',\n        members: 'columns\\\\-(?<value>${columns})',\n        configKey: 'columns',\n      },\n      {\n        type: 'Break After',\n        members: 'break\\\\-after\\\\-(?<value>auto|avoid|all|avoid\\\\-page|page|left|right|column)',\n      },\n      {\n        type: 'Break Before',\n        members: 'break\\\\-before\\\\-(?<value>auto|avoid|all|avoid\\\\-page|page|left|right|column)',\n      },\n      {\n        type: 'Break Inside',\n        members: 'break\\\\-inside\\\\-(?<value>auto|avoid|avoid\\\\-page|avoid\\\\-column)',\n      },\n      {\n        type: 'Box Decoration Break',\n        members: 'box\\\\-decoration\\\\-(?<value>clone|slice)',\n      },\n      {\n        type: 'Deprecated Box Decoration Break',\n        members: 'decoration\\\\-(?<value>clone|slice)',\n        deprecated: true,\n      },\n      {\n        type: 'Box Sizing',\n        members: 'box\\\\-(?<value>border|content)',\n      },\n      {\n        type: 'Display',\n        members:\n          'block|flex|grid|flow\\\\-root|contents|hidden|inline(\\\\-(block|flex|table|grid))?|table\\\\-(column|footer|header|row)\\\\-group|table(\\\\-(caption|row|cell|column))?|list\\\\-item',\n      },\n      {\n        type: 'Floats',\n        members: 'float\\\\-(?<value>right|left|none)',\n      },\n      {\n        type: 'Clear',\n        members: 'clear\\\\-(?<value>left|right|both|none)',\n      },\n      {\n        type: 'Isolation',\n        members: '(isolate|isolation\\\\-auto)',\n      },\n      {\n        type: 'Object Fit',\n        members: 'object\\\\-(?<value>contain|cover|fill|none|scale\\\\-down)',\n      },\n      {\n        type: 'Object Position',\n        members: 'object\\\\-(?<value>${objectPosition})',\n        configKey: 'objectPosition',\n      },\n      {\n        type: 'Overflow',\n        members: [\n          {\n            type: 'overflow',\n            members: 'overflow\\\\-(?<value>auto|hidden|clip|visible|scroll)',\n            shorthand: 'all',\n            body: 'overflow',\n          },\n          {\n            type: 'overflow-x',\n            members: 'overflow\\\\-x\\\\-(?<value>auto|hidden|clip|visible|scroll)',\n            shorthand: 'x',\n            body: 'overflow-x',\n          },\n          {\n            type: 'overflow-y',\n            members: 'overflow\\\\-y\\\\-(?<value>auto|hidden|clip|visible|scroll)',\n            shorthand: 'y',\n            body: 'overflow-y',\n          },\n        ],\n      },\n      {\n        type: 'Overscroll Behavior',\n        members: [\n          {\n            type: 'overscroll',\n            members: 'overscroll\\\\-(?<value>auto|contain|none)',\n            shorthand: 'all',\n            body: 'overscroll',\n          },\n          {\n            type: 'overscroll-x',\n            members: 'overscroll\\\\-x\\\\-(?<value>auto|contain|none)',\n            shorthand: 'x',\n            body: 'overscroll-x',\n          },\n          {\n            type: 'overscroll-y',\n            members: 'overscroll\\\\-y\\\\-(?<value>auto|contain|none)',\n            shorthand: 'y',\n            body: 'overscroll-y',\n          },\n        ],\n      },\n      {\n        type: 'Position',\n        members: 'static|fixed|absolute|relative|sticky',\n      },\n      {\n        type: 'Top / Right / Bottom / Left',\n        members: [\n          {\n            type: 'inset',\n            members: '(inset\\\\-(?<value>${inset})|\\\\-inset\\\\-(?<negativeValue>${-inset}))',\n            shorthand: 'all',\n            body: 'inset',\n            configKey: 'inset',\n          },\n          {\n            type: 'inset-y',\n            members: '(inset\\\\-y\\\\-(?<value>${inset})|\\\\-inset\\\\-y\\\\-(?<negativeValue>${-inset}))',\n            shorthand: 'y',\n            body: 'inset-y',\n            configKey: 'inset',\n          },\n          {\n            type: 'inset-x',\n            members: '(inset\\\\-x\\\\-(?<value>${inset})|\\\\-inset\\\\-x\\\\-(?<negativeValue>${-inset}))',\n            shorthand: 'x',\n            body: 'inset-x',\n            configKey: 'inset',\n          },\n          {\n            type: 'top',\n            members: '(top\\\\-(?<value>${inset})|\\\\-top\\\\-(?<negativeValue>${-inset}))',\n            shorthand: 't',\n            body: 'top',\n            configKey: 'inset',\n          },\n          {\n            type: 'right',\n            members: '(right\\\\-(?<value>${inset})|\\\\-right\\\\-(?<negativeValue>${-inset}))',\n            shorthand: 'r',\n            body: 'right',\n            configKey: 'inset',\n          },\n          {\n            type: 'bottom',\n            members: '(bottom\\\\-(?<value>${inset})|\\\\-bottom\\\\-(?<negativeValue>${-inset}))',\n            shorthand: 'b',\n            body: 'bottom',\n            configKey: 'inset',\n          },\n          {\n            type: 'left',\n            members: '(left\\\\-(?<value>${inset})|\\\\-left\\\\-(?<negativeValue>${-inset}))',\n            shorthand: 'l',\n            body: 'left',\n            configKey: 'inset',\n          },\n        ],\n      },\n      {\n        type: 'Visibility',\n        members: '(in)?visible|collapse',\n      },\n      {\n        type: 'Z-Index',\n        members: '(z\\\\-(?<value>${zIndex})|\\\\-z\\\\-(?<negativeValue>${-zIndex}))',\n        configKey: 'zIndex',\n      },\n    ],\n  },\n  {\n    type: 'Flexbox & Grid',\n    members: [\n      {\n        type: 'Flex Basis',\n        members: 'basis\\\\-(?<value>${flexBasis})',\n        configKey: 'flexBasis',\n      },\n      {\n        type: 'Flex Direction',\n        members: 'flex\\\\-(row|col)(\\\\-reverse)?',\n      },\n      {\n        type: 'Flex Wrap',\n        members: 'flex\\\\-(wrap(\\\\-reverse)?|nowrap)',\n      },\n      {\n        type: 'Flex',\n        members: 'flex\\\\-(?<value>${flex})',\n        configKey: 'flex',\n      },\n      {\n        type: 'Flex Grow',\n        members: 'grow(\\\\-(?<value>${flexGrow}))?',\n        configKey: 'flexGrow',\n      },\n      {\n        type: 'Deprecated Flex Grow',\n        members: 'flex\\\\-grow(\\\\-(?<value>${flexGrow}))?',\n        deprecated: true,\n        configKey: 'flexGrow',\n      },\n      {\n        type: 'Flex Shrink',\n        members: 'shrink(\\\\-(?<value>${flexShrink}))?',\n        configKey: 'flexShrink',\n      },\n      {\n        type: 'Deprecated Flex Shrink',\n        members: 'flex\\\\-shrink(\\\\-(?<value>${flexShrink}))?',\n        deprecated: true,\n        configKey: 'flexShrink',\n      },\n      {\n        type: 'Order',\n        members: '(order\\\\-(?<value>${order})|\\\\-order\\\\-(?<negativeValue>${-order}))',\n        configKey: 'order',\n      },\n      {\n        type: 'Grid Template Columns',\n        members: 'grid\\\\-cols\\\\-(?<value>${gridTemplateColumns})',\n        configKey: 'gridTemplateColumns',\n      },\n      {\n        type: 'Grid Column Start / End',\n        members: [\n          {\n            type: 'grid-column',\n            members: 'col\\\\-(?<value>${gridColumn})',\n            configKey: 'gridColumn',\n          },\n          {\n            type: 'grid-column-start',\n            members: 'col\\\\-start\\\\-(?<value>${gridColumnStart})',\n            configKey: 'gridColumnStart',\n          },\n          {\n            type: 'grid-column-end',\n            members: 'col\\\\-end\\\\-(?<value>${gridColumnEnd})',\n            configKey: 'gridColumnEnd',\n          },\n        ],\n      },\n      {\n        type: 'Grid Template Rows',\n        members: 'grid\\\\-rows\\\\-(?<value>${gridTemplateRows})',\n        configKey: 'gridTemplateRows',\n      },\n      {\n        type: 'Grid Row Start / End',\n        members: [\n          {\n            type: 'grid-row',\n            members: 'row\\\\-(?<value>${gridRow})',\n            configKey: 'gridRow',\n          },\n          {\n            type: 'grid-row-start',\n            members: 'row\\\\-start\\\\-(?<value>${gridRowStart})',\n            configKey: 'gridRowStart',\n          },\n          {\n            type: 'grid-row-end',\n            members: 'row\\\\-end\\\\-(?<value>${gridRowEnd})',\n            configKey: 'gridRowEnd',\n          },\n        ],\n      },\n      {\n        type: 'Grid Auto Flow',\n        members: 'grid\\\\-flow\\\\-(dense|(row|col)(\\\\-dense)?)',\n      },\n      {\n        type: 'Grid Auto Columns',\n        members: 'auto\\\\-cols\\\\-(?<value>${gridAutoColumns})',\n        configKey: 'gridAutoColumns',\n      },\n      {\n        type: 'Grid Auto Rows',\n        members: 'auto\\\\-rows\\\\-(?<value>${gridAutoRows})',\n        configKey: 'gridAutoRows',\n      },\n      {\n        type: 'Gap',\n        members: [\n          {\n            type: 'gap',\n            members: 'gap\\\\-(?<value>${gap})',\n            shorthand: 'all',\n            body: 'gap',\n            configKey: 'gap',\n          },\n          {\n            type: 'column-gap',\n            members: 'gap\\\\-x\\\\-(?<value>${gap})',\n            shorthand: 'x',\n            body: 'gap-x',\n            configKey: 'gap',\n          },\n          {\n            type: 'row-gap',\n            members: 'gap\\\\-y\\\\-(?<value>${gap})',\n            shorthand: 'y',\n            body: 'gap-y',\n            configKey: 'gap',\n          },\n        ],\n      },\n      {\n        type: 'Justify Content',\n        members: 'justify\\\\-(start|end|center|between|around|evenly)',\n      },\n      {\n        type: 'Justify Items',\n        members: 'justify\\\\-items\\\\-(start|end|center|stretch)',\n      },\n      {\n        type: 'Justify Self',\n        members: 'justify\\\\-self\\\\-(auto|start|end|center|stretch)',\n      },\n      {\n        type: 'Align Content',\n        members: 'content\\\\-(center|start|end|between|around|evenly|baseline)',\n      },\n      {\n        type: 'Align Items',\n        members: 'items\\\\-(start|end|center|baseline|stretch)',\n      },\n      {\n        type: 'Align Self',\n        members: 'self\\\\-(auto|start|end|center|stretch|baseline)',\n      },\n      {\n        type: 'Place Content',\n        members: 'place\\\\-content\\\\-(center|start|end|between|around|evenly|stretch|baseline)',\n      },\n      {\n        type: 'Place Items',\n        members: 'place\\\\-items\\\\-(start|end|center|stretch|baseline)',\n      },\n      {\n        type: 'Place Self',\n        members: 'place\\\\-self\\\\-(auto|start|end|center|stretch)',\n      },\n    ],\n  },\n  {\n    type: 'Spacing',\n    members: [\n      {\n        type: 'Padding',\n        members: [\n          {\n            type: 'p',\n            members: 'p\\\\-(?<value>${padding})',\n            shorthand: 'all',\n            body: 'p',\n            configKey: 'padding',\n          },\n          {\n            type: 'py',\n            members: 'py\\\\-(?<value>${padding})',\n            shorthand: 'y',\n            body: 'py',\n            configKey: 'padding',\n          },\n          {\n            type: 'px',\n            members: 'px\\\\-(?<value>${padding})',\n            shorthand: 'x',\n            body: 'px',\n            configKey: 'padding',\n          },\n          {\n            type: 'pt',\n            members: 'pt\\\\-(?<value>${padding})',\n            shorthand: 't',\n            body: 'pt',\n            configKey: 'padding',\n          },\n          {\n            type: 'pr',\n            members: 'pr\\\\-(?<value>${padding})',\n            shorthand: 'r',\n            body: 'pr',\n            configKey: 'padding',\n          },\n          {\n            type: 'pb',\n            members: 'pb\\\\-(?<value>${padding})',\n            shorthand: 'b',\n            body: 'pb',\n            configKey: 'padding',\n          },\n          {\n            type: 'pl',\n            members: 'pl\\\\-(?<value>${padding})',\n            shorthand: 'l',\n            body: 'pl',\n            configKey: 'padding',\n          },\n        ],\n      },\n      {\n        type: 'Margin',\n        members: [\n          {\n            type: 'm',\n            members: '(m\\\\-(?<value>${margin})|\\\\-m\\\\-(?<negativeValue>${-margin}))',\n            shorthand: 'all',\n            body: 'm',\n            configKey: 'margin',\n          },\n          {\n            type: 'my',\n            members: '(my\\\\-(?<value>${margin})|\\\\-my\\\\-(?<negativeValue>${-margin}))',\n            shorthand: 'y',\n            body: 'my',\n            configKey: 'margin',\n          },\n          {\n            type: 'mx',\n            members: '(mx\\\\-(?<value>${margin})|\\\\-mx\\\\-(?<negativeValue>${-margin}))',\n            shorthand: 'x',\n            body: 'mx',\n            configKey: 'margin',\n          },\n          {\n            type: 'mt',\n            members: '(mt\\\\-(?<value>${margin})|\\\\-mt\\\\-(?<negativeValue>${-margin}))',\n            shorthand: 't',\n            body: 'mt',\n            configKey: 'margin',\n          },\n          {\n            type: 'mr',\n            members: '(mr\\\\-(?<value>${margin})|\\\\-mr\\\\-(?<negativeValue>${-margin}))',\n            shorthand: 'r',\n            body: 'mr',\n            configKey: 'margin',\n          },\n          {\n            type: 'mb',\n            members: '(mb\\\\-(?<value>${margin})|\\\\-mb\\\\-(?<negativeValue>${-margin}))',\n            shorthand: 'b',\n            body: 'mb',\n            configKey: 'margin',\n          },\n          {\n            type: 'ml',\n            members: '(ml\\\\-(?<value>${margin})|\\\\-ml\\\\-(?<negativeValue>${-margin}))',\n            shorthand: 'l',\n            body: 'ml',\n            configKey: 'margin',\n          },\n        ],\n      },\n      {\n        type: 'Space Between',\n        members: [\n          {\n            type: 'space-y',\n            members: '(space\\\\-y\\\\-(?<value>${space})|\\\\-space\\\\-y\\\\-(?<negativeValue>${-space}))',\n            configKey: 'space',\n          },\n          {\n            type: 'space-x',\n            members: '(space\\\\-x\\\\-(?<value>${space})|\\\\-space\\\\-x\\\\-(?<negativeValue>${-space}))',\n            configKey: 'space',\n          },\n          {\n            type: 'space-y-reverse',\n            members: 'space\\\\-y\\\\-reverse',\n          },\n          {\n            type: 'space-x-reverse',\n            members: 'space\\\\-x\\\\-reverse',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: 'Sizing',\n    members: [\n      {\n        type: 'Width',\n        members: 'w\\\\-(?<value>${width})',\n        configKey: 'width',\n      },\n      {\n        type: 'Min-Width',\n        members: 'min\\\\-w\\\\-(?<value>${minWidth})',\n        configKey: 'minWidth',\n      },\n      {\n        type: 'Max-Width',\n        members: 'max\\\\-w\\\\-(?<value>${maxWidth})',\n        configKey: 'maxWidth',\n      },\n      {\n        type: 'Height',\n        members: 'h\\\\-(?<value>${height})',\n        configKey: 'height',\n      },\n      {\n        type: 'Min-Height',\n        members: 'min\\\\-h\\\\-(?<value>${minHeight})',\n        configKey: 'minHeight',\n      },\n      {\n        type: 'Max-Height',\n        members: 'max\\\\-h\\\\-(?<value>${maxHeight})',\n        configKey: 'maxHeight',\n      },\n      {\n        type: 'Size',\n        members: 'size\\\\-(?<value>${size})',\n        configKey: 'size',\n      },\n    ],\n  },\n  {\n    type: 'Typography',\n    members: [\n      {\n        type: 'Font Family',\n        members: 'font\\\\-(?<value>${fontFamily})',\n        configKey: 'fontFamily',\n      },\n      {\n        type: 'Font Size',\n        members: 'text\\\\-(?<value>${fontSize})',\n        configKey: 'fontSize',\n      },\n      {\n        type: 'Font Smoothing',\n        members: '(subpixel\\\\-)?antialiased',\n      },\n      {\n        type: 'Font Style',\n        members: '(not\\\\-)?italic',\n      },\n      {\n        type: 'Font Weight',\n        members: 'font\\\\-(?<value>${fontWeight})',\n        configKey: 'fontWeight',\n      },\n      {\n        type: 'Font Variant Numeric',\n        members: [\n          {\n            type: 'Normal Nums',\n            members: 'normal\\\\-nums',\n          },\n          {\n            type: 'Ordinal',\n            members: 'ordinal',\n          },\n          {\n            type: 'Slashed Zero',\n            members: 'slashed-zero',\n          },\n          {\n            type: 'Style Nums',\n            members: '(lining|oldstyle)\\\\-nums',\n          },\n          {\n            type: 'Proportinal or Tabular',\n            members: '(proportional|tabular)\\\\-nums',\n          },\n          {\n            type: 'Fractions',\n            members: '(diagonal|stacked)\\\\-fractions',\n          },\n        ],\n      },\n      {\n        type: 'Letter Spacing',\n        members: '(tracking\\\\-(?<value>${letterSpacing})|\\\\-tracking\\\\-(?<negativeValue>${-letterSpacing}))',\n        configKey: 'letterSpacing',\n      },\n      // {\n      //   type: 'Line Clamp',\n      //   members: 'line\\\\-clamp\\\\-(?<value>${lineClamp})',\n      //   configKey: 'lineClamp',\n      // },\n      {\n        type: 'Line Height',\n        members: 'leading\\\\-(?<value>${lineHeight})',\n        configKey: 'lineHeight',\n      },\n      // {\n      //   type: 'List Style Image',\n      //   members: 'list\\\\-image\\\\-(?<value>${listStyleImage})',\n      //   configKey: 'listStyleImage',\n      // },\n      {\n        type: 'List Style Type',\n        members: 'list\\\\-(?<value>${listStyleType})',\n        configKey: 'listStyleType',\n      },\n      {\n        type: 'List Style Position',\n        members: 'list\\\\-(in|out)side',\n      },\n      {\n        type: 'Text Alignment',\n        members: 'text\\\\-(left|center|right|justify|start|end)',\n      },\n      {\n        type: 'Text Color',\n        members: 'text\\\\-(?<value>${textColor})',\n        configKey: 'colors',\n      },\n      {\n        type: 'Text Decoration',\n        members: '(no\\\\-)?underline|overline|line\\\\-through',\n      },\n      {\n        type: 'Text Decoration Color',\n        members: 'decoration\\\\-(?<value>${colors})',\n        configKey: 'colors',\n      },\n      {\n        type: 'Text Decoration Style',\n        members: 'decoration\\\\-(solid|double|dotted|dashed|wavy)',\n      },\n      {\n        type: 'Text Decoration Thickness',\n        members: 'decoration\\\\-(?<value>${textDecorationThickness})',\n        configKey: 'textDecorationThickness',\n      },\n      {\n        type: 'Text Underline Offset',\n        members: 'underline\\\\-offset\\\\-(?<value>${textUnderlineOffset})',\n        configKey: 'textUnderlineOffset',\n      },\n      {\n        type: 'Text Transform',\n        members: '(upper|lower|normal\\\\-)case|capitalize',\n      },\n      {\n        type: 'Text Overflow',\n        members: 'truncate|text\\\\-(ellipsis|clip)',\n      },\n      {\n        type: 'Deprecated Text Overflow',\n        members: 'overflow\\\\-(ellipsis|clip)',\n        deprecated: true,\n      },\n      {\n        type: 'Text Wrap',\n        members: 'text\\\\-(wrap|nowrap|balance|pretty)',\n      },\n      {\n        type: 'Text Indent',\n        members: '(indent\\\\-(?<value>${textIndent})|\\\\-indent\\\\-(?<negativeValue>${-textIndent}))',\n        configKey: 'textIndent',\n      },\n      {\n        type: 'Vertical Alignment',\n        members: 'align\\\\-(baseline|top|middle|bottom|text\\\\-(top|bottom)|sub|super)',\n      },\n      {\n        type: 'Whitespace',\n        members: 'whitespace\\\\-(normal|nowrap|pre(\\\\-(line|wrap))?)',\n      },\n      {\n        type: 'Word Break',\n        members: 'break\\\\-(normal|words|all|keep)',\n      },\n      {\n        type: 'Content',\n        members: 'content\\\\-(?<value>${content})',\n        configKey: 'content',\n      },\n    ],\n  },\n  {\n    type: 'Backgrounds',\n    members: [\n      {\n        type: 'Background Image URL',\n        members: 'bg\\\\-\\\\[(image\\\\:|url\\\\()(?<value>${backgroundImageUrl})\\\\)\\\\]',\n      },\n      {\n        type: 'Background Attachment',\n        members: 'bg\\\\-(fixed|local|scroll)',\n      },\n      {\n        type: 'Background Clip',\n        members: 'bg\\\\-clip\\\\-(border|padding|content|text)',\n      },\n      {\n        type: 'Background Color',\n        members: 'bg\\\\-(?<value>${colors})',\n        configKey: 'colors',\n      },\n      {\n        type: 'Deprecated Background Opacity',\n        members: 'bg\\\\-opacity\\\\-(?<value>${backgroundOpacity})',\n        deprecated: true,\n      },\n      {\n        type: 'Background Origin',\n        members: 'bg\\\\-origin\\\\-(border|padding|content)',\n      },\n      {\n        type: 'Background Position',\n        members: 'bg\\\\-(?<value>${backgroundPosition})',\n        configKey: 'backgroundPosition',\n      },\n      {\n        type: 'Background Repeat',\n        members: 'bg\\\\-(no\\\\-repeat|repeat(\\\\-(x|y|round|space))?)',\n      },\n      {\n        type: 'Background Size',\n        members: 'bg\\\\-(?<value>${backgroundSize})',\n        configKey: 'backgroundSize',\n      },\n      {\n        type: 'Background Image',\n        members: 'bg\\\\-(?<value>${backgroundImage})',\n        configKey: 'backgroundImage',\n      },\n      {\n        type: 'Gradient Color Stops',\n        members: [\n          {\n            type: 'from',\n            members: 'from\\\\-(?<value>${gradientColorStopPositions})',\n            configKey: 'gradientColorStopPositions',\n          },\n          {\n            type: 'via',\n            members: 'via\\\\-(?<value>${gradientColorStopPositions})',\n            configKey: 'gradientColorStopPositions',\n          },\n          {\n            type: 'to',\n            members: 'to\\\\-(?<value>${gradientColorStopPositions})',\n            configKey: 'gradientColorStopPositions',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    type: 'Borders',\n    members: [\n      {\n        type: 'Border Radius',\n        members: [\n          {\n            type: 'border-radius',\n            members: 'rounded(\\\\-(?<value>${borderRadius}))?',\n            shorthand: 'all',\n            body: 'rounded',\n            configKey: 'borderRadius',\n          },\n          {\n            type: 'border-radius-top',\n            members: 'rounded\\\\-t(\\\\-(?<value>${borderRadius}))?',\n            shorthand: 't',\n            body: 'rounded-t',\n            configKey: 'borderRadius',\n          },\n          {\n            type: 'border-radius-right',\n            members: 'rounded\\\\-r(\\\\-(?<value>${borderRadius}))?',\n            shorthand: 'r',\n            body: 'rounded-r',\n            configKey: 'borderRadius',\n          },\n          {\n            type: 'border-radius-bottom',\n            members: 'rounded\\\\-b(\\\\-(?<value>${borderRadius}))?',\n            shorthand: 'b',\n            body: 'rounded-b',\n            configKey: 'borderRadius',\n          },\n          {\n            type: 'border-radius-left',\n            members: 'rounded\\\\-l(\\\\-(?<value>${borderRadius}))?',\n            shorthand: 'l',\n            body: 'rounded-l',\n            configKey: 'borderRadius',\n          },\n          {\n            type: 'border-radius-top-left',\n            members: 'rounded\\\\-tl(\\\\-(?<value>${borderRadius}))?',\n            shorthand: 'tl',\n            body: 'rounded-tl',\n            configKey: 'borderRadius',\n          },\n          {\n            type: 'border-radius-top-right',\n            members: 'rounded\\\\-tr(\\\\-(?<value>${borderRadius}))?',\n            shorthand: 'tr',\n            body: 'rounded-tr',\n            configKey: 'borderRadius',\n          },\n          {\n            type: 'border-radius-bottom-right',\n            members: 'rounded\\\\-br(\\\\-(?<value>${borderRadius}))?',\n            shorthand: 'br',\n            body: 'rounded-br',\n            configKey: 'borderRadius',\n          },\n          {\n            type: 'border-radius-bottom-left',\n            members: 'rounded\\\\-bl(\\\\-(?<value>${borderRadius}))?',\n            shorthand: 'bl',\n            body: 'rounded-bl',\n            configKey: 'borderRadius',\n          },\n        ],\n      },\n      {\n        type: 'Border Width',\n        members: [\n          {\n            type: 'border-width',\n            members: 'border(\\\\-(?<value>${borderWidth}))?',\n            shorthand: 'all',\n            body: 'border',\n            configKey: 'borderWidth',\n          },\n          {\n            type: 'border-y-width',\n            members: 'border\\\\-y(\\\\-(?<value>${borderWidth}))?',\n            shorthand: 'y',\n            body: 'border-y',\n            configKey: 'borderWidth',\n          },\n          {\n            type: 'border-x-width',\n            members: 'border\\\\-x(\\\\-(?<value>${borderWidth}))?',\n            shorthand: 'x',\n            body: 'border-x',\n            configKey: 'borderWidth',\n          },\n          {\n            type: 'border-top-width',\n            members: 'border\\\\-t(\\\\-(?<value>${borderWidth}))?',\n            shorthand: 't',\n            body: 'border-t',\n            configKey: 'borderWidth',\n          },\n          {\n            type: 'border-right-width',\n            members: 'border\\\\-r(\\\\-(?<value>${borderWidth}))?',\n            shorthand: 'r',\n            body: 'border-r',\n            configKey: 'borderWidth',\n          },\n          {\n            type: 'border-bottom-width',\n            members: 'border\\\\-b(\\\\-(?<value>${borderWidth}))?',\n            shorthand: 'b',\n            body: 'border-b',\n            configKey: 'borderWidth',\n          },\n          {\n            type: 'border-left-width',\n            members: 'border\\\\-l(\\\\-(?<value>${borderWidth}))?',\n            shorthand: 'l',\n            body: 'border-l',\n            configKey: 'borderWidth',\n          },\n        ],\n      },\n      {\n        type: 'Border Color',\n        members: [\n          {\n            type: 'border-color',\n            members: 'border\\\\-(?<value>${borderColor})',\n            shorthand: 'all',\n            body: 'border',\n            configKey: 'borderColor',\n          },\n          {\n            type: 'border-y-color',\n            members: 'border\\\\-y\\\\-(?<value>${borderColor})',\n            shorthand: 'y',\n            body: 'border-y',\n            configKey: 'borderColor',\n          },\n          {\n            type: 'border-x-color',\n            members: 'border\\\\-x\\\\-(?<value>${borderColor})',\n            shorthand: 'x',\n            body: 'border-x',\n            configKey: 'borderColor',\n          },\n          {\n            type: 'border-top-color',\n            members: 'border\\\\-t\\\\-(?<value>${borderColor})',\n            shorthand: 't',\n            body: 'border-t',\n            configKey: 'borderColor',\n          },\n          {\n            type: 'border-right-color',\n            members: 'border\\\\-r\\\\-(?<value>${borderColor})',\n            shorthand: 'r',\n            body: 'border-r',\n            configKey: 'borderColor',\n          },\n          {\n            type: 'border-bottom-color',\n            members: 'border\\\\-b\\\\-(?<value>${borderColor})',\n            shorthand: 'b',\n            body: 'border-b',\n            configKey: 'borderColor',\n          },\n          {\n            type: 'border-left-color',\n            members: 'border\\\\-l\\\\-(?<value>${borderColor})',\n            shorthand: 'l',\n            body: 'border-l',\n            configKey: 'borderColor',\n          },\n        ],\n      },\n      {\n        type: 'Deprecated Border Opacity',\n        members: 'border\\\\-opacity\\\\-(?<value>${borderOpacity})',\n        deprecated: true,\n        configKey: 'borderOpacity',\n      },\n      {\n        type: 'Border Style',\n        members: 'border\\\\-(solid|dashed|dotted|double|hidden|none)',\n      },\n      {\n        type: 'Divide Width',\n        members: [\n          {\n            type: 'divide-y',\n            members: 'divide\\\\-y(\\\\-(?<value>${divideWidth}))?',\n            configKey: 'divideWidth',\n          },\n          {\n            type: 'divide-x',\n            members: 'divide\\\\-x(\\\\-(?<value>${divideWidth}))?',\n            configKey: 'divideWidth',\n          },\n          {\n            type: 'divide-y-reverse',\n            members: 'divide\\\\-y\\\\-reverse',\n          },\n          {\n            type: 'divide-x-reverse',\n            members: 'divide\\\\-x\\\\-reverse',\n          },\n        ],\n      },\n      {\n        type: 'Divide Color',\n        members: 'divide\\\\-(?<value>${divideColor})',\n        configKey: 'divideColor',\n      },\n      {\n        type: 'Divide Style',\n        members: 'divide\\\\-(solid|dashed|dotted|double|none)',\n      },\n      {\n        type: 'Outline Width',\n        members: 'outline\\\\-(?<value>${outlineWidth})',\n        configKey: 'outlineWidth',\n      },\n      {\n        type: 'Outline Color',\n        members: 'outline\\\\-(?<value>${outlineColor})',\n        configKey: 'outlineColor',\n      },\n      {\n        type: 'Outline Style',\n        members: 'outline(\\\\-(none|dashed|dotted|double|hidden))?',\n      },\n      {\n        type: 'Outline Offset',\n        members:\n          '(outline\\\\-offset\\\\-(?<value>${outlineOffset})|\\\\-outline\\\\-offset\\\\-(?<negativeValue>${-outlineOffset}))',\n        configKey: 'outlineOffset',\n      },\n      {\n        type: 'Ring Width',\n        members: [\n          {\n            type: 'ring',\n            members: 'ring(\\\\-(?<value>${ringWidth}))?',\n            configKey: 'ringWidth',\n          },\n        ],\n      },\n      {\n        type: 'Ring Inset',\n        members: [\n          {\n            type: 'ring-inset',\n            members: 'ring\\\\-inset',\n          },\n        ],\n      },\n      {\n        type: 'Ring Color',\n        members: 'ring\\\\-(?<value>${colors})',\n        configKey: 'colors',\n      },\n      {\n        type: 'Deprecated Ring Opacity',\n        members: 'ring\\\\-opacity\\\\-(?<value>${ringOpacity})',\n        deprecated: true,\n        configKey: 'ringOpacity',\n      },\n      {\n        type: 'Ring Offset Width',\n        members: 'ring\\\\-offset\\\\-(?<value>${ringOffsetWidth})',\n        configKey: 'ringOffsetWidth',\n      },\n      {\n        type: 'Ring Offset Color',\n        members: 'ring\\\\-offset\\\\-(?<value>${colors})',\n        configKey: 'colors',\n      },\n    ],\n  },\n  {\n    type: 'Effects',\n    members: [\n      {\n        type: 'Box Shadow',\n        members: 'shadow(\\\\-(?<value>${boxShadow}))?',\n        configKey: 'boxShadow',\n      },\n      {\n        type: 'Box Shadow Color',\n        members: 'shadow(\\\\-(?<value>${boxShadowColor}))?',\n        configKey: 'boxShadowColor',\n      },\n      {\n        type: 'Opacity',\n        members: 'opacity\\\\-(?<value>${opacity})',\n        configKey: 'opacity',\n      },\n      {\n        type: 'Mix Blend Mode',\n        members:\n          'mix\\\\-blend\\\\-(normal|multiply|screen|overlay|darken|lighten|color\\\\-(burn|dodge)|(hard|soft)\\\\-light|difference|exclusion|hue|saturation|color|luminosity|plus\\\\-lighter)',\n      },\n      {\n        type: 'Background Blend Mode',\n        members:\n          'bg\\\\-blend\\\\-(normal|multiply|screen|overlay|darken|lighten|color\\\\-(dodge|burn)|(hard|soft)\\\\-light|difference|exclusion|hue|saturation|color|luminosity)',\n      },\n    ],\n  },\n  {\n    type: 'Filters',\n    members: [\n      {\n        type: 'Deprecated Filter',\n        members: 'filter',\n        deprecated: true,\n      },\n      {\n        type: 'Blur',\n        members: 'blur(\\\\-(?<value>${blur}))?',\n        configKey: 'blur',\n      },\n      {\n        type: 'Brightness',\n        members: 'brightness\\\\-(?<value>${brightness})',\n        configKey: 'brightness',\n      },\n      {\n        type: 'Contrast',\n        members: 'contrast\\\\-(?<value>${contrast})',\n        configKey: 'contrast',\n      },\n      {\n        type: 'Drop Shadow',\n        members: 'drop\\\\-shadow(\\\\-(?<value>${dropShadow}))?',\n        configKey: 'dropShadow',\n      },\n      {\n        type: 'Grayscale',\n        members: 'grayscale(\\\\-(?<value>${grayscale}))?',\n        configKey: 'grayscale',\n      },\n      {\n        type: 'Hue Rotate',\n        members: 'hue\\\\-rotate\\\\-(?<value>${hueRotate})|\\\\-hue\\\\-rotate\\\\-(?<negativeValue>${-hueRotate})',\n        configKey: 'hueRotate',\n      },\n      {\n        type: 'Invert',\n        members: 'invert(\\\\-(?<value>${invert}))?',\n        configKey: 'invert',\n      },\n      {\n        type: 'Saturate',\n        members: 'saturate\\\\-(?<value>${saturate})',\n        configKey: 'saturate',\n      },\n      {\n        type: 'Sepia',\n        members: 'sepia(\\\\-(?<value>${sepia}))?',\n        configKey: 'sepia',\n      },\n      {\n        type: 'Backdrop Blur',\n        members: 'backdrop\\\\-blur(\\\\-(?<value>${backdropBlur}))?',\n        configKey: 'backdropBlur',\n      },\n      {\n        type: 'Backdrop Brightness',\n        members: 'backdrop\\\\-brightness\\\\-(?<value>${backdropBrightness})',\n        configKey: 'backdropBrightness',\n      },\n      {\n        type: 'Backdrop Contrast',\n        members: 'backdrop\\\\-contrast\\\\-(?<value>${backdropContrast})',\n        configKey: 'backdropContrast',\n      },\n      {\n        type: 'Backdrop Grayscale',\n        members: 'backdrop\\\\-grayscale(\\\\-(?<value>${backdropGrayscale}))?',\n        configKey: 'backdropGrayscale',\n      },\n      {\n        type: 'Backdrop Hue Rotate',\n        members:\n          'backdrop\\\\-hue\\\\-rotate\\\\-(?<value>${backdropHueRotate})|\\\\-backdrop\\\\-hue\\\\-rotate\\\\-(?<negativeValue>${-backdropHueRotate})',\n        configKey: 'backdropHueRotate',\n      },\n      {\n        type: 'Backdrop Invert',\n        members: 'backdrop\\\\-invert(\\\\-(?<value>${backdropInvert}))?',\n        configKey: 'backdropInvert',\n      },\n      {\n        type: 'Backdrop Opacity',\n        members: 'backdrop\\\\-opacity\\\\-(?<value>${backdropOpacity})',\n        configKey: 'backdropOpacity',\n      },\n      {\n        type: 'Backdrop Saturate',\n        members: 'backdrop\\\\-saturate\\\\-(?<value>${backdropSaturate})',\n        configKey: 'backdropSaturate',\n      },\n      {\n        type: 'Backdrop Sepia',\n        members: 'backdrop\\\\-sepia(\\\\-(?<value>${backdropSepia}))?',\n        configKey: 'backdropSepia',\n      },\n    ],\n  },\n  {\n    type: 'Tables',\n    members: [\n      {\n        type: 'Border Collapse',\n        members: 'border\\\\-(collapse|separate)',\n      },\n      {\n        type: 'Border Spacing',\n        members: [\n          {\n            type: 'border-spacing',\n            members: 'border\\\\-spacing\\\\-(?<value>${borderSpacing})',\n            shorthand: 'all',\n            body: 'border-spacing',\n            configKey: 'borderSpacing',\n          },\n          {\n            type: 'border-spacing-x',\n            members: 'border\\\\-spacing\\\\-x\\\\-(?<value>${borderSpacing})',\n            shorthand: 'x',\n            body: 'border-spacing-x',\n            configKey: 'borderSpacing',\n          },\n          {\n            type: 'border-spacing-y',\n            members: 'border\\\\-spacing\\\\-y\\\\-(?<value>${borderSpacing})',\n            shorthand: 'y',\n            body: 'border-spacing-y',\n            configKey: 'borderSpacing',\n          },\n        ],\n      },\n      {\n        type: 'Table Layout',\n        members: 'table\\\\-(auto|fixed)',\n      },\n    ],\n  },\n  {\n    type: 'Transitions & Animation',\n    members: [\n      {\n        type: 'Transition Property',\n        members: 'transition(\\\\-(?<value>${transitionProperty}))?',\n        configKey: 'transitionProperty',\n      },\n      {\n        type: 'Transition Duration',\n        members: 'duration(\\\\-(?<value>${transitionDuration}))?',\n        configKey: 'transitionDuration',\n      },\n      {\n        type: 'Transition Timing Function',\n        members: 'ease(\\\\-(?<value>${transitionTimingFunction}))?',\n        configKey: 'transitionTimingFunction',\n      },\n      {\n        type: 'Transition Delay',\n        members: 'delay\\\\-(?<value>${transitionDelay})',\n        configKey: 'transitionDelay',\n      },\n      {\n        type: 'Animation',\n        members: 'animate\\\\-(?<value>${animation})',\n        configKey: 'animation',\n      },\n    ],\n  },\n  {\n    type: 'Transforms',\n    members: [\n      {\n        type: 'Transform GPU',\n        members: [\n          {\n            type: 'transform-gpu',\n            members: 'transform\\\\-gpu',\n          },\n        ],\n      },\n      {\n        type: 'Transform None',\n        members: [\n          {\n            type: 'transform-none',\n            members: 'transform\\\\-none',\n          },\n        ],\n      },\n      {\n        type: 'Deprecated Transform',\n        members: [\n          {\n            type: 'transform',\n            members: 'transform',\n            deprecated: true,\n          },\n        ],\n      },\n      {\n        type: 'Scale',\n        members: [\n          {\n            type: 'scale',\n            members: 'scale\\\\-(?<value>${scale})|\\\\-scale\\\\-(?<negativeValue>${-scale})',\n            shorthand: 'all',\n            body: 'scale',\n            configKey: 'scale',\n          },\n          {\n            type: 'scale-y',\n            members: 'scale\\\\-y\\\\-(?<value>${scale})|\\\\-scale\\\\-y\\\\-(?<negativeValue>${-scale})',\n            shorthand: 'y',\n            body: 'scale-y',\n            configKey: 'scale',\n          },\n          {\n            type: 'scale-x',\n            members: 'scale\\\\-x\\\\-(?<value>${scale})|\\\\-scale\\\\-x\\\\-(?<negativeValue>${-scale})',\n            shorthand: 'x',\n            body: 'scale-x',\n            configKey: 'scale',\n          },\n        ],\n      },\n      {\n        type: 'Rotate',\n        members: '(rotate\\\\-(?<value>${rotate})|\\\\-rotate\\\\-(?<negativeValue>${-rotate}))',\n        configKey: 'rotate',\n      },\n      {\n        type: 'Translate',\n        members: [\n          {\n            type: 'translate-x',\n            members: '(translate\\\\-x\\\\-(?<value>${translate})|\\\\-translate\\\\-x\\\\-(?<negativeValue>${-translate}))',\n            configKey: 'translate',\n          },\n          {\n            type: 'translate-y',\n            members: '(translate\\\\-y\\\\-(?<value>${translate})|\\\\-translate\\\\-y\\\\-(?<negativeValue>${-translate}))',\n            configKey: 'translate',\n          },\n        ],\n      },\n      {\n        type: 'Skew',\n        members: [\n          {\n            type: 'skew-x',\n            members: '(skew\\\\-x\\\\-(?<value>${skew})|\\\\-skew\\\\-x\\\\-(?<negativeValue>${-skew}))',\n            configKey: 'skew',\n          },\n          {\n            type: 'skew-y',\n            members: '(skew\\\\-y\\\\-(?<value>${skew})|\\\\-skew\\\\-y\\\\-(?<negativeValue>${-skew}))',\n            configKey: 'skew',\n          },\n        ],\n      },\n      {\n        type: 'Transform Origin',\n        members: 'origin\\\\-(?<value>${transformOrigin})',\n        configKey: 'transformOrigin',\n      },\n    ],\n  },\n  {\n    type: 'Interactivity',\n    members: [\n      {\n        type: 'Accent Color',\n        members: 'accent\\\\-(?<value>${accentColor})',\n        configKey: 'accentColor',\n      },\n      {\n        type: 'Appearance',\n        members: 'appearance\\\\-none',\n      },\n      {\n        type: 'Cursor',\n        members: 'cursor\\\\-(?<value>${cursor})',\n        configKey: 'cursor',\n      },\n      {\n        type: 'Caret Color',\n        members: 'caret\\\\-(?<value>${colors})',\n        configKey: 'colors',\n      },\n      {\n        type: 'Pointer Events',\n        members: 'pointer\\\\-events\\\\-(none|auto)',\n      },\n      {\n        type: 'Resize',\n        members: 'resize(\\\\-(none|x|y))?',\n      },\n      {\n        type: 'Scroll Behavior',\n        members: 'scroll\\\\-(auto|smooth)',\n      },\n      {\n        type: 'Scroll Margin',\n        members: 'scroll\\\\-(?<value>${scrollMargin})',\n        configKey: 'scrollMargin',\n        members: [\n          {\n            type: 'scroll-m',\n            members: 'scroll-m\\\\-(?<value>${scrollMargin})|\\\\-scroll-m\\\\-(?<negativeValue>${-scrollMargin})',\n            configKey: 'scrollMargin',\n          },\n          {\n            type: 'scroll-my',\n            members: 'scroll-my\\\\-(?<value>${scrollMargin})|\\\\-scroll-my\\\\-(?<negativeValue>${-scrollMargin})',\n            configKey: 'scrollMargin',\n          },\n          {\n            type: 'scroll-mx',\n            members: 'scroll-mx\\\\-(?<value>${scrollMargin})|\\\\-scroll-mx\\\\-(?<negativeValue>${-scrollMargin})',\n            configKey: 'scrollMargin',\n          },\n          {\n            type: 'scroll-mt',\n            members: 'scroll-mt\\\\-(?<value>${scrollMargin})|\\\\-scroll-mt\\\\-(?<negativeValue>${-scrollMargin})',\n            configKey: 'scrollMargin',\n          },\n          {\n            type: 'scroll-mr',\n            members: 'scroll-mr\\\\-(?<value>${scrollMargin})|\\\\-scroll-mr\\\\-(?<negativeValue>${-scrollMargin})',\n            configKey: 'scrollMargin',\n          },\n          {\n            type: 'scroll-mb',\n            members: 'scroll-mb\\\\-(?<value>${scrollMargin})|\\\\-scroll-mb\\\\-(?<negativeValue>${-scrollMargin})',\n            configKey: 'scrollMargin',\n          },\n          {\n            type: 'scroll-ml',\n            members: 'scroll-ml\\\\-(?<value>${scrollMargin})|\\\\-scroll-ml\\\\-(?<negativeValue>${-scrollMargin})',\n            configKey: 'scrollMargin',\n          },\n        ],\n      },\n      {\n        type: 'Scroll Padding',\n        members: 'scroll\\\\-(?<value>${scrollPadding})',\n        configKey: 'scrollPadding',\n        members: [\n          {\n            type: 'scroll-p',\n            members: 'scroll-p\\\\-(?<value>${scrollPadding})',\n            configKey: 'scrollPadding',\n          },\n          {\n            type: 'scroll-py',\n            members: 'scroll-py\\\\-(?<value>${scrollPadding})',\n            configKey: 'scrollPadding',\n          },\n          {\n            type: 'scroll-px',\n            members: 'scroll-px\\\\-(?<value>${scrollPadding})',\n            configKey: 'scrollPadding',\n          },\n          {\n            type: 'scroll-pt',\n            members: 'scroll-pt\\\\-(?<value>${scrollPadding})',\n            configKey: 'scrollPadding',\n          },\n          {\n            type: 'scroll-pr',\n            members: 'scroll-pr\\\\-(?<value>${scrollPadding})',\n            configKey: 'scrollPadding',\n          },\n          {\n            type: 'scroll-pb',\n            members: 'scroll-pb\\\\-(?<value>${scrollPadding})',\n            configKey: 'scrollPadding',\n          },\n          {\n            type: 'scroll-pl',\n            members: 'scroll-pl\\\\-(?<value>${scrollPadding})',\n            configKey: 'scrollPadding',\n          },\n        ],\n      },\n      {\n        type: 'Scroll Snap Align',\n        members: 'snap\\\\-(start|end|center|align-none)',\n      },\n      {\n        type: 'Scroll Snap Stop',\n        members: 'snap\\\\-(normal|always)',\n      },\n      {\n        type: 'Scroll Snap Type',\n        members: 'snap\\\\-(none|x|y|both)',\n      },\n      {\n        type: 'Scroll Snap Type Strictness',\n        members: 'snap\\\\-(mandatory|proximity)',\n      },\n      {\n        type: 'Touch Action',\n        members: [\n          {\n            type: 'Touch Action Mode',\n            members: 'touch\\\\-(auto|none|manipulation)',\n          },\n          {\n            type: 'Touch Action X',\n            members: 'touch\\\\-(pan\\\\-(x|left|right))',\n          },\n          {\n            type: 'Touch Action Y',\n            members: 'touch\\\\-(pan\\\\-(y|up|down))',\n          },\n          {\n            type: 'Touch Action Pinch Zoom',\n            members: 'touch\\\\-pinch\\\\-zoom',\n          },\n        ],\n      },\n      {\n        type: 'User Select',\n        members: 'select\\\\-(none|text|all|auto)',\n      },\n      {\n        type: 'Will Change',\n        members: 'will\\\\-change\\\\-(?<value>${willChange})',\n        configKey: 'willChange',\n      },\n    ],\n  },\n  {\n    type: 'SVG',\n    members: [\n      {\n        type: 'Fill',\n        members: 'fill\\\\-(?<value>${fill})',\n        configKey: 'fill',\n      },\n      {\n        type: 'Stroke',\n        members: 'stroke\\\\-(?<value>${stroke})',\n        configKey: 'stroke',\n      },\n      {\n        type: 'Stroke Width',\n        members: 'stroke\\\\-(?<value>${strokeWidth})',\n        configKey: 'strokeWidth',\n      },\n    ],\n  },\n  {\n    type: 'Accessibility',\n    members: [\n      {\n        type: 'Screen Readers',\n        members: '(not\\\\-)?sr\\\\-only',\n      },\n      {\n        type: 'Forced Color Adjust',\n        members: 'forced\\\\-color\\\\-adjust\\\\-(auto|none)',\n      },\n    ],\n  },\n  {\n    type: 'Official Plugins',\n    members: [\n      {\n        // TODO:\n        // Support for custom prose classname like on\n        // https://tailwindcss.com/docs/typography-plugin#changing-the-default-class-name\n        // Adding custom color themes\n        // https://tailwindcss.com/docs/typography-plugin#adding-custom-color-themes\n        type: 'Typography',\n        members: [\n          {\n            type: 'prose',\n            members: '(not\\\\-)?prose',\n          },\n          {\n            type: 'Prose Gray Scale',\n            members: 'prose\\\\-(gray|slate|zinc|neutral|stone)',\n          },\n          {\n            type: 'Prose Type Scale',\n            members: 'prose\\\\-(sm|base|lg|2?xl)',\n          },\n          {\n            type: 'Prose Dark Mode',\n            members: 'prose\\\\-invert',\n          },\n          // These are modifiers and not the last part of the classname\n          // {\n          //   type: 'Prose Element modifiers',\n          //   members:\n          //     'prose\\\\-(headings|lead|h1|h2|h3|h4|p|a|blockquote|figure|figcaption|strong|em|code|pre|ol|ul|li|table|thead|tr|th|td|img|video|hr)',\n          // },\n        ],\n      },\n      // ('Forms' plugin has no related classnames, only selectors like `input[type='password']`)\n      {\n        type: 'Aspect Ratio',\n        members: [\n          {\n            type: 'aspect-w',\n            members: 'aspect\\\\-(none|w\\\\-(?<value>${aspectRatio}))',\n          },\n          {\n            type: 'aspect-h',\n            members: 'aspect\\\\-h\\\\-(?<value>${aspectRatio})',\n          },\n        ],\n      },\n      {\n        type: 'Line Clamp',\n        members: 'line\\\\-clamp\\\\-(none|(?<value>${lineClamp}))',\n      },\n    ],\n  },\n];\n","/**\n * @fileoverview Avoid using multiple Tailwind CSS classnames when not required (e.g. \"mx-3 my-3\" could be replaced by \"m-3\")\n * @author François Massart\n */\n'use strict';\n\nimport { groups as defaultGroups } from '../configs/groups';\nimport astUtil from '../util/ast';\nimport customConfig from '../util/customConfig';\nimport docsUrl from '../util/docsUrl';\nimport groupUtil from '../util/groupMethods';\nimport parserUtil from '../util/parser';\nimport getOption from '../util/settings';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n// Predefine message for use in context.report conditional.\n// messageId will still be usable in tests.\nconst SHORTHAND_CANDIDATE_CLASSNAMES_DETECTED_MSG = `Classnames '{{classnames}}' could be replaced by the '{{shorthand}}' shorthand!`;\n\nexport default {\n  meta: {\n    docs: {\n      description: 'Enforces the usage of shorthand Tailwind CSS classnames',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('enforces-shorthand'),\n    },\n    messages: {\n      shorthandCandidateDetected: SHORTHAND_CANDIDATE_CLASSNAMES_DETECTED_MSG,\n    },\n    fixable: 'code',\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          callees: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          ignoredKeys: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          config: {\n            // returned from `loadConfig()` utility\n            type: ['string', 'object'],\n          },\n          tags: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n        },\n      },\n    ],\n  },\n\n  create: function (context) {\n    const callees = getOption(context, 'callees');\n    const skipClassAttribute = getOption(context, 'skipClassAttribute');\n    const tags = getOption(context, 'tags');\n    const twConfig = getOption(context, 'config');\n    const classRegex = getOption(context, 'classRegex');\n\n    const mergedConfig = customConfig.resolve(twConfig);\n\n    //----------------------------------------------------------------------\n    // Helpers\n    //----------------------------------------------------------------------\n\n    const placeContentOptions = ['center', 'start', 'end', 'between', 'around', 'evenly', 'baseline', 'stretch'];\n    const placeItemsOptions = ['start', 'end', 'center', 'stretch'];\n    const placeSelfOptions = ['auto', 'start', 'end', 'center', 'stretch'];\n    // These are shorthand candidates that do not share the same parent type\n    const complexEquivalences = [\n      {\n        needles: ['overflow-hidden', 'text-ellipsis', 'whitespace-nowrap'],\n        shorthand: 'truncate',\n        mode: 'exact',\n      },\n      {\n        needles: ['w-', 'h-'],\n        shorthand: 'size-',\n        mode: 'value',\n      },\n      ...placeContentOptions.map((opt) => {\n        return {\n          needles: [`content-${opt}`, `justify-${opt}`],\n          shorthand: `place-content-${opt}`,\n          mode: 'exact',\n        };\n      }),\n      ...placeItemsOptions.map((opt) => {\n        return {\n          needles: [`items-${opt}`, `justify-items-${opt}`],\n          shorthand: `place-items-${opt}`,\n          mode: 'exact',\n        };\n      }),\n      ...placeSelfOptions.map((opt) => {\n        return {\n          needles: [`self-${opt}`, `justify-self-${opt}`],\n          shorthand: `place-self-${opt}`,\n          mode: 'exact',\n        };\n      }),\n    ];\n\n    // Init assets\n    const targetProperties = {\n      Layout: ['Overflow', 'Overscroll Behavior', 'Top / Right / Bottom / Left'],\n      'Flexbox & Grid': ['Gap'],\n      Spacing: ['Padding', 'Margin'],\n      Sizing: ['Width', 'Height'],\n      Borders: ['Border Radius', 'Border Width', 'Border Color'],\n      Tables: ['Border Spacing'],\n      Transforms: ['Scale'],\n      Typography: ['Text Overflow', 'Whitespace'],\n    };\n\n    // We don't want to affect other rules by object reference\n    const cloned = JSON.parse(JSON.stringify(defaultGroups));\n    const targetGroups = cloned.filter((g) => Object.keys(targetProperties).includes(g.type));\n    targetGroups.forEach((g) => {\n      // Without using the clone, other rules would be affected by this `filter()`\n      g.members = g.members.filter((sub) => targetProperties[g.type].includes(sub.type));\n    });\n\n    /**\n     * Retrieve the main part of a classname base on its shorthand scope\n     * @param {Object} targetGroups A specific subset of the groups\n     * @param {String} parentType The name of the parent e.g. 'Border Radius'\n     * @param {String} shorthand The searched shorthand e.g. 'all', 'y', 't', 'tr'\n     * @returns\n     */\n    const getBodyByShorthand = (targetGroups, parentType, shorthand) => {\n      const findByMemberType = (obj) => obj.members.find((m) => m.type === parentType);\n      const mainGroup = targetGroups.find(findByMemberType);\n      if (!mainGroup) {\n        return '';\n      }\n      const typeGroup = mainGroup.members.find((m) => m.type === parentType);\n      // const typeGroup = mainGroup.find(findByMemberType);\n      if (!typeGroup) {\n        return '';\n      }\n      const type = typeGroup.members.find((m) => m.shorthand === shorthand);\n      return !type ? '' : type.body;\n    };\n\n    /**\n     * Parse the classnames and report found shorthand candidates\n     * @param {ASTNode} node The root node of the current parsing\n     * @param {ASTNode} arg The child node of node\n     * @returns {void}\n     */\n    const parseForShorthandCandidates = (node, arg = null) => {\n      let originalClassNamesValue = null;\n      let start = null;\n      let end = null;\n      let prefix = '';\n      let suffix = '';\n      const troubles = [];\n      if (arg === null) {\n        originalClassNamesValue = astUtil.extractValueFromNode(node);\n        const range = astUtil.extractRangeFromNode(node);\n        if (node.type === 'TextAttribute') {\n          start = range[0];\n          end = range[1];\n        } else {\n          start = range[0] + 1;\n          end = range[1] - 1;\n        }\n      } else {\n        switch (arg.type) {\n          case 'Identifier':\n            return;\n          case 'TemplateLiteral':\n            arg.expressions.forEach((exp) => {\n              parseForShorthandCandidates(node, exp);\n            });\n            arg.quasis.forEach((quasis) => {\n              parseForShorthandCandidates(node, quasis);\n            });\n            return;\n          case 'ConditionalExpression':\n            parseForShorthandCandidates(node, arg.consequent);\n            parseForShorthandCandidates(node, arg.alternate);\n            return;\n          case 'LogicalExpression':\n            parseForShorthandCandidates(node, arg.right);\n            return;\n          case 'ArrayExpression':\n            arg.elements.forEach((el) => {\n              parseForShorthandCandidates(node, el);\n            });\n            return;\n          case 'ObjectExpression':\n            const isUsedByClassNamesPlugin = node.callee && node.callee.name === 'classnames';\n            const isVue = node.key && node.key.type === 'VDirectiveKey';\n            arg.properties.forEach((prop) => {\n              const propVal = isUsedByClassNamesPlugin || isVue ? prop.key : prop.value;\n              parseForShorthandCandidates(node, propVal);\n            });\n            return;\n          case 'Property':\n            parseForShorthandCandidates(node, arg.key);\n            return;\n\n          case 'Literal':\n            originalClassNamesValue = arg.value;\n            start = arg.range[0] + 1;\n            end = arg.range[1] - 1;\n            break;\n          case 'TemplateElement':\n            originalClassNamesValue = arg.value.raw;\n            if (originalClassNamesValue === '') {\n              return;\n            }\n            start = arg.range[0];\n            end = arg.range[1];\n            // https://github.com/eslint/eslint/issues/13360\n            // The problem is that range computation includes the backticks (`test`)\n            // but value.raw does not include them, so there is a mismatch.\n            // start/end does not include the backticks, therefore it matches value.raw.\n            const txt = context.getSourceCode().getText(arg);\n            prefix = astUtil.getTemplateElementPrefix(txt, originalClassNamesValue);\n            suffix = astUtil.getTemplateElementSuffix(txt, originalClassNamesValue);\n            originalClassNamesValue = astUtil.getTemplateElementBody(txt, prefix, suffix);\n            break;\n        }\n      }\n\n      let { classNames, whitespaces, headSpace, tailSpace } =\n        astUtil.extractClassnamesFromValue(originalClassNamesValue);\n\n      if (classNames.length <= 1) {\n        // Don't run sorting for a single or empty className\n        return;\n      }\n\n      const parsed = [];\n\n      classNames.forEach((className, index) => {\n        parsed.push(groupUtil.parseClassname(className, targetGroups, mergedConfig, index));\n      });\n\n      const validated = [];\n\n      // Handle sets of classnames with different parent types\n      let remaining = parsed;\n      for (const { needles: inputSet, shorthand: outputClassname, mode } of complexEquivalences) {\n        if (remaining.length < inputSet.length) {\n          continue;\n        }\n\n        // Matching classes\n        const parsedElementsInInputSet = remaining.filter((remainingClass) => {\n          if (mode === 'exact') {\n            // Test if the name contains the target class, eg. 'text-ellipsis' inside 'md:text-ellipsis'...\n            return inputSet.some((inputClass) => remainingClass.name.includes(inputClass));\n          }\n          // Test if the body of the class matches, eg. 'h-' inside 'h-10'\n          if (mode === 'value') {\n            const bodyMatch = inputSet.some(\n              (inputClassPattern) => `${mergedConfig.prefix}${inputClassPattern}` === remainingClass.body\n            );\n            if ([undefined, null].includes(mergedConfig.theme.size)) {\n              return false;\n            }\n            // w-screen + h-screen ≠ size-screen (Issue #307)\n            const sizeKeys = Object.keys(mergedConfig.theme.size);\n            const isSize = ['w-', 'h-'].includes(remainingClass.body);\n            const isValidSize = sizeKeys.includes(remainingClass.value);\n            const wValue = mergedConfig.theme.width[remainingClass.value];\n            const hValue = mergedConfig.theme.height[remainingClass.value];\n            const sizeValue = mergedConfig.theme.size[remainingClass.value];\n            const fullMatch = wValue === hValue && wValue === sizeValue;\n            return bodyMatch && !(isSize && !isValidSize && !fullMatch);\n          }\n        });\n\n        const variantGroups = new Map();\n        parsedElementsInInputSet.forEach((o) => {\n          const val = mode === 'value' ? o.value : '';\n          const v = `${o.variants}${o.important ? '!' : ''}${val}`;\n          if (!variantGroups.has(v)) {\n            variantGroups.set(\n              v,\n              parsedElementsInInputSet.filter(\n                (c) => c.variants === o.variants && c.important === o.important && (val === '' || c.value === val)\n              )\n            );\n          }\n        });\n        const validKeys = new Set();\n        variantGroups.forEach((classes, key) => {\n          let skip = false;\n          // Make sure all required classes for the shorthand are present\n          if (classes.length < inputSet.length) {\n            skip = true;\n          }\n          // Make sure the classes share all the single/shared/same value\n          if (mode === 'value' && new Set(classes.map((p) => p.value)).size !== 1) {\n            skip = true;\n          }\n          if (!skip) {\n            validKeys.add(key);\n          }\n        });\n        validKeys.forEach((k) => {\n          const candidates = variantGroups.get(k);\n          const index = candidates[0].index;\n          const variants = candidates[0].variants;\n          const important = candidates[0].important ? '!' : '';\n          const classValue = mode === 'value' ? candidates[0].value : '';\n\n          const patchedClassname = `${variants}${important}${mergedConfig.prefix}${outputClassname}${classValue}`;\n          troubles.push([candidates.map((c) => `${c.name}`), patchedClassname]);\n\n          const validatedClassname = groupUtil.parseClassname(patchedClassname, targetGroups, mergedConfig, index);\n          validated.push(validatedClassname);\n\n          remaining = remaining.filter((p) => !candidates.includes(p));\n        });\n      }\n\n      // Handle sets of classnames with the same parent type\n      // Each group parentType\n      const checkedGroups = [];\n      remaining.forEach((classname, idx, arr) => {\n        // Valid candidate\n        if (classname.parentType === '') {\n          validated.push(classname);\n        } else if (!checkedGroups.includes(classname.parentType)) {\n          checkedGroups.push(classname.parentType);\n          const sameType = remaining.filter((cls) => cls.parentType === classname.parentType);\n          // Comparing same parentType classnames\n          const checkedVariantsValue = [];\n          sameType.forEach((cls) => {\n            const key = cls.variants + (cls.important ? '!' : '') + cls.value;\n            if (!checkedVariantsValue.includes(key)) {\n              checkedVariantsValue.push(key);\n              const sameVariantAndValue = sameType.filter((v) => {\n                return !(v.variants !== cls.variants || v.value !== cls.value || v.important !== cls.important);\n              });\n              if (sameVariantAndValue.length === 1) {\n                validated.push(cls);\n              } else if (sameVariantAndValue.length) {\n                const supportCorners = ['Border Radius'].includes(classname.parentType);\n                const hasTL =\n                  supportCorners && sameVariantAndValue.some((c) => ['tl', 't', 'all'].includes(c.shorthand));\n                const hasTR =\n                  supportCorners && sameVariantAndValue.some((c) => ['tr', 't', 'all'].includes(c.shorthand));\n                const hasBR =\n                  supportCorners && sameVariantAndValue.some((c) => ['br', 'b', 'all'].includes(c.shorthand));\n                const hasBL =\n                  supportCorners && sameVariantAndValue.some((c) => ['bl', 'b', 'all'].includes(c.shorthand));\n                const hasT = sameVariantAndValue.some((c) => c.shorthand === 't') || (hasTL && hasTR);\n                const hasR = sameVariantAndValue.some((c) => c.shorthand === 'r') || (hasTR && hasBR);\n                const hasB = sameVariantAndValue.some((c) => c.shorthand === 'b') || (hasBL && hasBR);\n                const hasL = sameVariantAndValue.some((c) => c.shorthand === 'l') || (hasTL && hasBL);\n                const hasX = sameVariantAndValue.some((c) => c.shorthand === 'x') || (hasL && hasR);\n                const hasY = sameVariantAndValue.some((c) => c.shorthand === 'y') || (hasT && hasB);\n                const hasAllProp = sameVariantAndValue.some((c) => c.shorthand === 'all');\n                const hasAllPropNoCorner = hasY && hasX;\n                const hasAllPropWithCorners = (hasL && hasR) || (hasT && hasB);\n                const hasAllEquivalent = !supportCorners ? hasAllPropNoCorner : hasAllPropWithCorners;\n                const hasAll = hasAllProp || hasAllEquivalent;\n                const important = cls.important ? '!' : '';\n                const isNegative = ('' + cls.value).substring(0, 1) === '-';\n                const minus = isNegative ? '-' : '';\n                const absoluteVal = isNegative ? ('' + cls.value).substring(1) : cls.value;\n\n                if (hasAll) {\n                  const all = getBodyByShorthand(targetGroups, classname.parentType, 'all');\n                  const val = absoluteVal.length ? '-' + absoluteVal : '';\n                  const patchedName = `${cls.variants}${important}${minus}${mergedConfig.prefix}${all}${val}`;\n                  troubles.push([sameVariantAndValue.map((c) => c.name), patchedName]);\n                  cls.name = patchedName;\n                  cls.shorthand = 'all';\n                  validated.push(cls);\n                } else if (hasY || hasX) {\n                  const xOrY = hasX ? 'x' : 'y';\n                  const xOrYType = getBodyByShorthand(targetGroups, classname.parentType, xOrY);\n                  const patchedName = `${cls.variants}${important}${minus}${mergedConfig.prefix}${xOrYType}${\n                    absoluteVal.length ? '-' + absoluteVal : ''\n                  }`;\n                  const toBeReplaced = sameVariantAndValue\n                    .filter((c) => {\n                      const candidates = hasX ? ['l', 'r'] : ['t', 'b'];\n                      return candidates.includes(c.shorthand);\n                    })\n                    .map((c) => c.name);\n                  const toBeKept = sameVariantAndValue.filter((c) => {\n                    const candidates = hasY ? ['l', 'r'] : ['t', 'b'];\n                    return candidates.includes(c.shorthand);\n                  });\n\n                  troubles.push([toBeReplaced, patchedName]);\n                  let replaced = false;\n                  sameVariantAndValue.forEach((ref, i) => {\n                    if (toBeKept.find((k) => k.name === ref.name)) {\n                      validated.push(ref);\n                    } else if (!replaced) {\n                      replaced = true;\n                      const cloned = JSON.parse(JSON.stringify(ref));\n                      cloned.name = patchedName;\n                      cloned.shorthand = xOrY;\n                      validated.push(cloned);\n                    }\n                  });\n                } else if (supportCorners && (hasT || hasR || hasB || hasL)) {\n                  const side = hasT ? 't' : hasR ? 'r' : hasB ? 'b' : 'l';\n                  const sideBody = getBodyByShorthand(targetGroups, classname.parentType, side);\n                  const val = absoluteVal.length ? '-' + absoluteVal : '';\n                  const patchedName = `${cls.variants}${important}${minus}${mergedConfig.prefix}${sideBody}${val}`;\n                  const toBeReplaced = sameVariantAndValue\n                    .filter((c) => {\n                      const candidates = hasT ? ['tl', 'tr'] : hasR ? ['tr', 'br'] : hasB ? ['bl', 'br'] : ['tl', 'bl'];\n                      return candidates.includes(c.shorthand);\n                    })\n                    .map((c) => c.name);\n                  const toBeKept = sameVariantAndValue.filter((c) => {\n                    const candidates = hasT ? ['bl', 'br'] : hasR ? ['tl', 'bl'] : hasB ? ['tl', 'tr'] : ['tr', 'br'];\n                    return candidates.includes(c.shorthand);\n                  });\n\n                  troubles.push([toBeReplaced, patchedName]);\n                  let replaced = false;\n                  sameVariantAndValue.forEach((ref, i) => {\n                    if (toBeKept.find((k) => k.name === ref.name)) {\n                      validated.push(ref);\n                    } else if (!replaced) {\n                      replaced = true;\n                      const cloned = JSON.parse(JSON.stringify(ref));\n                      cloned.name = patchedName;\n                      cloned.shorthand = side;\n                      validated.push(cloned);\n                    }\n                  });\n                } else {\n                  validated.push(...sameVariantAndValue);\n                }\n              }\n            }\n          });\n        }\n      });\n\n      // Try to keep the original order\n      validated.sort((a, b) => (a.index < b.index ? -1 : +1));\n\n      // Generates the validated attribute value\n      const union = validated.map((val) => val.leading + val.name + val.trailing);\n\n      let validatedClassNamesValue = '';\n\n      // Generates the validated attribute value\n      if (union.length === 1) {\n        validatedClassNamesValue += headSpace ? whitespaces[0] : '';\n        validatedClassNamesValue += union[0];\n        validatedClassNamesValue += tailSpace ? whitespaces[whitespaces.length - 1] : '';\n      } else {\n        for (let i = 0; i < union.length; i++) {\n          const isLast = i === union.length - 1;\n          const w = whitespaces[i] ?? '';\n          const cls = union[i];\n          validatedClassNamesValue += headSpace ? `${w}${cls}` : isLast ? `${cls}` : `${cls}${w}`;\n          if (tailSpace && isLast) {\n            validatedClassNamesValue += whitespaces[whitespaces.length - 1] ?? '';\n          }\n        }\n      }\n\n      troubles.forEach((issue) => {\n        if (originalClassNamesValue !== validatedClassNamesValue) {\n          validatedClassNamesValue = prefix + validatedClassNamesValue + suffix;\n          context.report({\n            node: node,\n            messageId: 'shorthandCandidateDetected',\n            data: {\n              classnames: issue[0].join(', '),\n              shorthand: issue[1],\n            },\n            fix: function (fixer) {\n              return fixer.replaceTextRange([start, end], validatedClassNamesValue);\n            },\n          });\n        }\n      });\n    };\n\n    //----------------------------------------------------------------------\n    // Public\n    //----------------------------------------------------------------------\n\n    const attributeVisitor = function (node) {\n      if (!astUtil.isClassAttribute(node, classRegex) || skipClassAttribute) {\n        return;\n      }\n      if (astUtil.isLiteralAttributeValue(node)) {\n        parseForShorthandCandidates(node);\n      } else if (node.value && node.value.type === 'JSXExpressionContainer') {\n        parseForShorthandCandidates(node, node.value.expression);\n      }\n    };\n\n    const callExpressionVisitor = function (node) {\n      const calleeStr = astUtil.calleeToString(node.callee);\n      if (callees.findIndex((name) => calleeStr === name) === -1) {\n        return;\n      }\n\n      node.arguments.forEach((arg) => {\n        parseForShorthandCandidates(node, arg);\n      });\n    };\n\n    const scriptVisitor = {\n      JSXAttribute: attributeVisitor,\n      TextAttribute: attributeVisitor,\n      CallExpression: callExpressionVisitor,\n      TaggedTemplateExpression: function (node) {\n        if (!tags.includes(node.tag.name ?? node.tag.object?.name ?? node.tag.callee?.name)) {\n          return;\n        }\n\n        parseForShorthandCandidates(node, node.quasi);\n      },\n    };\n\n    const templateVisitor = {\n      CallExpression: callExpressionVisitor,\n      /*\n      Tagged templates inside data bindings\n      https://github.com/vuejs/vue/issues/9721\n      */\n      VAttribute: function (node) {\n        switch (true) {\n          case !astUtil.isValidVueAttribute(node, classRegex):\n            return;\n          case astUtil.isVLiteralValue(node):\n            parseForShorthandCandidates(node);\n            break;\n          case astUtil.isArrayExpression(node):\n            node.value.expression.elements.forEach((arg) => {\n              parseForShorthandCandidates(node, arg);\n            });\n            break;\n          case astUtil.isObjectExpression(node):\n            node.value.expression.properties.forEach((prop) => {\n              parseForShorthandCandidates(node, prop);\n            });\n            break;\n        }\n      },\n    };\n\n    return parserUtil.defineTemplateBodyVisitor(context, templateVisitor, scriptVisitor);\n  },\n};\n","/**\n * @fileoverview Detect obsolete classnames when upgrading to Tailwind CSS v3\n * @author François Massart\n */\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst customConfig = require('../util/customConfig');\nconst astUtil = require('../util/ast');\nconst groupUtil = require('../util/groupMethods');\nconst getOption = require('../util/settings');\nconst parserUtil = require('../util/parser');\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n// Predefine message for use in context.report conditional.\n// messageId will still be usable in tests.\nconst CLASSNAME_NOT_NEEDED_MSG = `Classname '{{classnames}}' is not needed in Tailwind CSS v3!`;\nconst CLASSNAMES_NOT_NEEDED_MSG = `Classnames '{{classnames}}' are not needed in Tailwind CSS v3!`;\nconst CLASSNAME_CHANGED_MSG = `Classname '{{deprecated}}' should be updated to '{{updated}}' in Tailwind CSS v3!`;\nconst OPACITY_CLASS_DEPRECATED_MSG = `Classname '{{classname}}' should be replaced by an opacity suffix (eg. '/{{value}}')`;\n\nexport default {\n  meta: {\n    docs: {\n      description: 'Detect obsolete classnames when upgrading to Tailwind CSS v3',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('migration-from-tailwind-2'),\n    },\n    messages: {\n      classnameNotNeeded: CLASSNAME_NOT_NEEDED_MSG,\n      classnamesNotNeeded: CLASSNAMES_NOT_NEEDED_MSG,\n      classnameChanged: CLASSNAME_CHANGED_MSG,\n      classnameOpacityDeprecated: OPACITY_CLASS_DEPRECATED_MSG,\n    },\n    fixable: 'code',\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          callees: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          ignoredKeys: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          config: {\n            // returned from `loadConfig()` utility\n            type: ['string', 'object'],\n          },\n          tags: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n        },\n      },\n    ],\n  },\n\n  create: function (context) {\n    const callees = getOption(context, 'callees');\n    const skipClassAttribute = getOption(context, 'skipClassAttribute');\n    const tags = getOption(context, 'tags');\n    const twConfig = getOption(context, 'config');\n    const classRegex = getOption(context, 'classRegex');\n\n    const mergedConfig = customConfig.resolve(twConfig);\n\n    //----------------------------------------------------------------------\n    // Helpers\n    //----------------------------------------------------------------------\n\n    /**\n     * Recursive function crawling into child nodes\n     * @param {ASTNode} node The root node of the current parsing\n     * @param {ASTNode} arg The child node of node\n     * @returns {void}\n     */\n    const parseForObsoleteClassNames = (node, arg = null) => {\n      let originalClassNamesValue = null;\n      let start = null;\n      let end = null;\n      let prefix = '';\n      let suffix = '';\n      if (arg === null) {\n        originalClassNamesValue = astUtil.extractValueFromNode(node);\n        const range = astUtil.extractRangeFromNode(node);\n        if (node.type === 'TextAttribute') {\n          start = range[0];\n          end = range[1];\n        } else {\n          start = range[0] + 1;\n          end = range[1] - 1;\n        }\n      } else {\n        switch (arg.type) {\n          case 'Identifier':\n            return;\n          case 'TemplateLiteral':\n            arg.expressions.forEach((exp) => {\n              parseForObsoleteClassNames(node, exp);\n            });\n            arg.quasis.forEach((quasis) => {\n              parseForObsoleteClassNames(node, quasis);\n            });\n            return;\n          case 'ConditionalExpression':\n            parseForObsoleteClassNames(node, arg.consequent);\n            parseForObsoleteClassNames(node, arg.alternate);\n            return;\n          case 'LogicalExpression':\n            parseForObsoleteClassNames(node, arg.right);\n            return;\n          case 'ArrayExpression':\n            arg.elements.forEach((el) => {\n              parseForObsoleteClassNames(node, el);\n            });\n            return;\n          case 'ObjectExpression':\n            arg.properties.forEach((prop) => {\n              parseForObsoleteClassNames(node, prop.key);\n            });\n            return;\n          case 'Property':\n            parseForObsoleteClassNames(node, arg.key);\n            return;\n          case 'Literal':\n            originalClassNamesValue = arg.value;\n            start = arg.range[0] + 1;\n            end = arg.range[1] - 1;\n            break;\n          case 'TemplateElement':\n            originalClassNamesValue = arg.value.raw;\n            if (originalClassNamesValue === '') {\n              return;\n            }\n            start = arg.range[0];\n            end = arg.range[1];\n            // https://github.com/eslint/eslint/issues/13360\n            // The problem is that range computation includes the backticks (`test`)\n            // but value.raw does not include them, so there is a mismatch.\n            // start/end does not include the backticks, therefore it matches value.raw.\n            const txt = context.getSourceCode().getText(arg);\n            prefix = astUtil.getTemplateElementPrefix(txt, originalClassNamesValue);\n            suffix = astUtil.getTemplateElementSuffix(txt, originalClassNamesValue);\n            originalClassNamesValue = astUtil.getTemplateElementBody(txt, prefix, suffix);\n            break;\n        }\n      }\n\n      let { classNames, whitespaces, headSpace, tailSpace } =\n        astUtil.extractClassnamesFromValue(originalClassNamesValue);\n\n      const notNeeded = [];\n      const outdated = [];\n      const deprecatedBgOpacity = [];\n      const filtered = classNames.filter((cls) => {\n        const suffix = groupUtil.getSuffix(cls, mergedConfig.separator);\n        if (/^((backdrop\\-)?(filter|transform))$/i.test(suffix)) {\n          notNeeded.push(cls);\n          return false;\n        }\n        let overflowRes = /^overflow\\-(?<value>clip|ellipsis)$/i.exec(suffix);\n        if (overflowRes && overflowRes.groups && overflowRes.groups.value) {\n          outdated.push([cls, cls.replace(/overflow\\-(clip|ellipsis)$/i, `text-${overflowRes.groups.value}`)]);\n        }\n        let growShrinkRes = /flex\\-(?<prop>grow|shrink)(\\-(?<value>${flexVal}))?/i.exec(suffix);\n        if (growShrinkRes && growShrinkRes.groups && growShrinkRes.groups.prop) {\n          const prop = growShrinkRes.groups.prop;\n          const flexVal = growShrinkRes.groups.flexVal;\n          const optionalVal = flexVal ? `\\-${flexVal}` : '';\n          const fixRegex = new RegExp(`flex\\-${prop}${optionalVal}`);\n          outdated.push([cls, cls.replace(fixRegex, `${prop}${flexVal ? '-' + flexVal : ''}`)]);\n        }\n        let boxRes = /^decoration\\-(?<value>clone|slice)$/i.exec(suffix);\n        if (boxRes && boxRes.groups && boxRes.groups.value) {\n          const boxVal = boxRes.groups.value;\n          const fixRegex = new RegExp(`decoration\\-${boxVal}`);\n          outdated.push([cls, cls.replace(fixRegex, `box-decoration\\-${boxVal}`)]);\n        }\n        let bgOpacityRes = /^(bg|border|ring)\\-opacity\\-(?<value>\\d{1,})$/i.exec(suffix);\n        if (bgOpacityRes && bgOpacityRes.groups && bgOpacityRes.groups.value) {\n          const opacityVal = bgOpacityRes.groups.value;\n          deprecatedBgOpacity.push([cls, opacityVal]);\n        }\n        let placeholderRes = /^placeholder\\-(?<value>.{1,})$/i.exec(suffix);\n        if (placeholderRes && placeholderRes.groups && placeholderRes.groups.value) {\n          const placeholderVal = placeholderRes.groups.value;\n          const fixPlaceholderRegex = new RegExp(`placeholder\\-${placeholderVal}$`);\n          outdated.push([cls, cls.replace(fixPlaceholderRegex, `placeholder:text\\-${placeholderVal}`)]);\n        }\n        return true;\n      });\n\n      if (notNeeded.length) {\n        let validatedClassNamesValue = '';\n        for (let i = 0; i < filtered.length; i++) {\n          const isLast = i === filtered.length - 1;\n          const w = whitespaces[i] ?? '';\n          const cls = filtered[i];\n          validatedClassNamesValue += headSpace ? `${w}${cls}` : isLast ? `${cls}` : `${cls}${w}`;\n          if (headSpace && tailSpace && isLast) {\n            validatedClassNamesValue += whitespaces[whitespaces.length - 1] ?? '';\n          }\n        }\n        validatedClassNamesValue = prefix + validatedClassNamesValue + suffix;\n        context.report({\n          node,\n          messageId: notNeeded.length === 1 ? 'classnameNotNeeded' : 'classnamesNotNeeded',\n          data: {\n            classnames: notNeeded.join(', '),\n          },\n          fix: function (fixer) {\n            return fixer.replaceTextRange([start, end], validatedClassNamesValue);\n          },\n        });\n      }\n\n      outdated.forEach((outdatedClass) => {\n        let validatedClassNamesValue = '';\n        for (let i = 0; i < filtered.length; i++) {\n          const w = whitespaces[i] ?? '';\n          const cls = filtered[i];\n          validatedClassNamesValue += headSpace ? `${w}${cls}` : `${cls}${w}`;\n          if (headSpace && tailSpace && i === filtered.length - 1) {\n            validatedClassNamesValue += whitespaces[whitespaces.length - 1] ?? '';\n          }\n        }\n        validatedClassNamesValue =\n          prefix + validatedClassNamesValue.replace(outdatedClass[0], outdatedClass[1]) + suffix;\n        context.report({\n          node,\n          messageId: 'classnameChanged',\n          data: {\n            deprecated: outdatedClass[0],\n            updated: outdatedClass[1],\n          },\n          fix: function (fixer) {\n            return fixer.replaceTextRange([start, end], validatedClassNamesValue);\n          },\n        });\n      });\n      deprecatedBgOpacity.forEach((bgClass) => {\n        context.report({\n          node,\n          messageId: 'classnameOpacityDeprecated',\n          data: {\n            classname: bgClass[0],\n            value: bgClass[1],\n          },\n        });\n      });\n    };\n\n    //----------------------------------------------------------------------\n    // Public\n    //----------------------------------------------------------------------\n\n    const attributeVisitor = function (node) {\n      if (!astUtil.isClassAttribute(node, classRegex) || skipClassAttribute) {\n        return;\n      }\n      if (astUtil.isLiteralAttributeValue(node)) {\n        parseForObsoleteClassNames(node);\n      } else if (node.value && node.value.type === 'JSXExpressionContainer') {\n        parseForObsoleteClassNames(node, node.value.expression);\n      }\n    };\n\n    const callExpressionVisitor = function (node) {\n      const calleeStr = astUtil.calleeToString(node.callee);\n      if (callees.findIndex((name) => calleeStr === name) === -1) {\n        return;\n      }\n      node.arguments.forEach((arg) => {\n        parseForObsoleteClassNames(node, arg);\n      });\n    };\n\n    const scriptVisitor = {\n      JSXAttribute: attributeVisitor,\n      TextAttribute: attributeVisitor,\n      CallExpression: callExpressionVisitor,\n      TaggedTemplateExpression: function (node) {\n        if (!tags.includes(node.tag.name ?? node.tag.object?.name ?? node.tag.callee?.name)) {\n          return;\n        }\n        parseForObsoleteClassNames(node, node.quasi);\n      },\n    };\n\n    const templateVisitor = {\n      CallExpression: callExpressionVisitor,\n      /*\n      Tagged templates inside data bindings\n      https://github.com/vuejs/vue/issues/9721\n      */\n      VAttribute: function (node) {\n        switch (true) {\n          case !astUtil.isValidVueAttribute(node, classRegex):\n            return;\n          case astUtil.isVLiteralValue(node):\n            parseForObsoleteClassNames(node);\n            break;\n          case astUtil.isArrayExpression(node):\n            node.value.expression.elements.forEach((arg) => {\n              parseForObsoleteClassNames(node, arg);\n            });\n            break;\n          case astUtil.isObjectExpression(node):\n            node.value.expression.properties.forEach((prop) => {\n              parseForObsoleteClassNames(node, prop);\n            });\n            break;\n        }\n      },\n    };\n\n    return parserUtil.defineTemplateBodyVisitor(context, templateVisitor, scriptVisitor);\n  },\n};\n","/**\n * @fileoverview Forbid using arbitrary values in classnames\n * @author François Massart\n */\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst customConfig = require('../util/customConfig');\nconst astUtil = require('../util/ast');\nconst groupUtil = require('../util/groupMethods');\nconst getOption = require('../util/settings');\nconst parserUtil = require('../util/parser');\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n// Predefine message for use in context.report conditional.\n// messageId will still be usable in tests.\nconst ARBITRARY_VALUE_DETECTED_MSG = `Arbitrary value detected in '{{classname}}'`;\n\nexport default {\n  meta: {\n    docs: {\n      description: 'Forbid using arbitrary values in classnames',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-arbitrary-value'),\n    },\n    messages: {\n      arbitraryValueDetected: ARBITRARY_VALUE_DETECTED_MSG,\n    },\n    fixable: null,\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          callees: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          ignoredKeys: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          config: {\n            // returned from `loadConfig()` utility\n            type: ['string', 'object'],\n          },\n          tags: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n        },\n      },\n    ],\n  },\n\n  create: function (context) {\n    const callees = getOption(context, 'callees');\n    const skipClassAttribute = getOption(context, 'skipClassAttribute');\n    const tags = getOption(context, 'tags');\n    const twConfig = getOption(context, 'config');\n    const classRegex = getOption(context, 'classRegex');\n\n    const mergedConfig = customConfig.resolve(twConfig);\n\n    //----------------------------------------------------------------------\n    // Helpers\n    //----------------------------------------------------------------------\n\n    /**\n     * Recursive function crawling into child nodes\n     * @param {ASTNode} node The root node of the current parsing\n     * @param {ASTNode} arg The child node of node\n     * @returns {void}\n     */\n    const parseForArbitraryValues = (node, arg = null) => {\n      let originalClassNamesValue = null;\n      if (arg === null) {\n        originalClassNamesValue = astUtil.extractValueFromNode(node);\n      } else {\n        switch (arg.type) {\n          case 'Identifier':\n            return;\n          case 'TemplateLiteral':\n            arg.expressions.forEach((exp) => {\n              parseForArbitraryValues(node, exp);\n            });\n            arg.quasis.forEach((quasis) => {\n              parseForArbitraryValues(node, quasis);\n            });\n            return;\n          case 'ConditionalExpression':\n            parseForArbitraryValues(node, arg.consequent);\n            parseForArbitraryValues(node, arg.alternate);\n            return;\n          case 'LogicalExpression':\n            parseForArbitraryValues(node, arg.right);\n            return;\n          case 'ArrayExpression':\n            arg.elements.forEach((el) => {\n              parseForArbitraryValues(node, el);\n            });\n            return;\n          case 'ObjectExpression':\n            const isUsedByClassNamesPlugin = node.callee && node.callee.name === 'classnames';\n            const isVue = node.key && node.key.type === 'VDirectiveKey';\n            arg.properties.forEach((prop) => {\n              const propVal = isUsedByClassNamesPlugin || isVue ? prop.key : prop.value;\n              parseForArbitraryValues(node, propVal);\n            });\n            return;\n          case 'Property':\n            parseForArbitraryValues(node, arg.key);\n            return;\n          case 'Literal':\n            originalClassNamesValue = arg.value;\n            break;\n          case 'TemplateElement':\n            originalClassNamesValue = arg.value.raw;\n            if (originalClassNamesValue === '') {\n              return;\n            }\n            break;\n        }\n      }\n\n      let { classNames } = astUtil.extractClassnamesFromValue(originalClassNamesValue);\n      const forbidden = [];\n      classNames.forEach((cls, idx) => {\n        const parsed = groupUtil.parseClassname(cls, [], mergedConfig, idx);\n        if (/\\[.*\\]/i.test(parsed.body)) {\n          forbidden.push(parsed.name);\n        }\n      });\n\n      forbidden.forEach((forbiddenClass) => {\n        context.report({\n          node,\n          messageId: 'arbitraryValueDetected',\n          data: {\n            classname: forbiddenClass,\n          },\n        });\n      });\n    };\n\n    //----------------------------------------------------------------------\n    // Public\n    //----------------------------------------------------------------------\n\n    const attributeVisitor = function (node) {\n      if (!astUtil.isClassAttribute(node, classRegex) || skipClassAttribute) {\n        return;\n      }\n      if (astUtil.isLiteralAttributeValue(node)) {\n        parseForArbitraryValues(node);\n      } else if (node.value && node.value.type === 'JSXExpressionContainer') {\n        parseForArbitraryValues(node, node.value.expression);\n      }\n    };\n\n    const callExpressionVisitor = function (node) {\n      const calleeStr = astUtil.calleeToString(node.callee);\n      if (callees.findIndex((name) => calleeStr === name) === -1) {\n        return;\n      }\n      node.arguments.forEach((arg) => {\n        parseForArbitraryValues(node, arg);\n      });\n    };\n\n    const scriptVisitor = {\n      JSXAttribute: attributeVisitor,\n      TextAttribute: attributeVisitor,\n      CallExpression: callExpressionVisitor,\n      TaggedTemplateExpression: function (node) {\n        if (!tags.includes(node.tag.name ?? node.tag.object?.name ?? node.tag.callee?.name)) {\n          return;\n        }\n        parseForArbitraryValues(node, node.quasi);\n      },\n    };\n\n    const templateVisitor = {\n      CallExpression: callExpressionVisitor,\n      /*\n      Tagged templates inside data bindings\n      https://github.com/vuejs/vue/issues/9721\n      */\n      VAttribute: function (node) {\n        switch (true) {\n          case !astUtil.isValidVueAttribute(node, classRegex):\n            return;\n          case astUtil.isVLiteralValue(node):\n            parseForArbitraryValues(node, null);\n            break;\n          case astUtil.isArrayExpression(node):\n            node.value.expression.elements.forEach((arg) => {\n              parseForArbitraryValues(node, arg);\n            });\n            break;\n          case astUtil.isObjectExpression(node):\n            node.value.expression.properties.forEach((prop) => {\n              parseForArbitraryValues(node, prop);\n            });\n            break;\n        }\n      },\n    };\n\n    return parserUtil.defineTemplateBodyVisitor(context, templateVisitor, scriptVisitor);\n  },\n};\n","/**\n * @fileoverview Avoid contradicting Tailwind CSS classnames (e.g. \"w-3 w-5\")\n * @author François Massart\n */\n'use strict';\n\nimport { groups as defaultGroups } from '../configs/groups';\nimport astUtil from '../util/ast';\nimport customConfig from '../util/customConfig';\nimport docsUrl from '../util/docsUrl';\nimport groupUtil from '../util/groupMethods';\nimport parserUtil from '../util/parser';\nimport getOption from '../util/settings';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n// Predefine message for use in context.report conditional.\n// messageId will still be usable in tests.\nconst CONFLICTING_CLASSNAMES_DETECTED_MSG = `Classnames {{classnames}} are conflicting!`;\n\nexport default {\n  meta: {\n    docs: {\n      description: 'Avoid contradicting Tailwind CSS classnames (e.g. \"w-3 w-5\")',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('no-contradicting-classname'),\n    },\n    messages: {\n      conflictingClassnames: CONFLICTING_CLASSNAMES_DETECTED_MSG,\n    },\n    fixable: null,\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          callees: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          ignoredKeys: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          config: {\n            // returned from `loadConfig()` utility\n            type: ['string', 'object'],\n          },\n          tags: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n        },\n      },\n    ],\n  },\n\n  create: function (context) {\n    const callees = getOption(context, 'callees');\n    const ignoredKeys = getOption(context, 'ignoredKeys');\n    const skipClassAttribute = getOption(context, 'skipClassAttribute');\n    const tags = getOption(context, 'tags');\n    const twConfig = getOption(context, 'config');\n    const classRegex = getOption(context, 'classRegex');\n\n    const mergedConfig = customConfig.resolve(twConfig);\n\n    //----------------------------------------------------------------------\n    // Helpers\n    //----------------------------------------------------------------------\n\n    // Init assets before sorting\n    const groups = groupUtil.getGroups(defaultGroups, mergedConfig);\n\n    /**\n     * Parse the classnames and report found conflicts\n     * @param {Array} classNames\n     * @param {ASTNode} node\n     */\n    const parseForContradictingClassNames = (classNames, node) => {\n      // Init assets before sorting\n      const sorted = groupUtil.initGroupSlots(groups);\n\n      // Move each classname inside its dedicated group\n      classNames.forEach((className) => {\n        const idx = groupUtil.getGroupIndex(className, groups, mergedConfig.separator);\n        if (idx > -1) {\n          sorted[idx].push(className);\n        }\n      });\n\n      // Only multiple classNames\n      const sortedGroups = sorted.filter((slot) => slot.length > 1);\n      const arbitraryPropsGroupIndex = sortedGroups.findIndex((slot) => {\n        const suffix = groupUtil.getSuffix(slot[0], mergedConfig.separator);\n        return groupUtil.getArbitraryProperty(suffix, mergedConfig.separator) !== '';\n      });\n\n      // Sorts each groups' classnames\n      const ambiguousArbitraryValuesOrClasses = String.raw`(\\[(.*${mergedConfig.separator}))|(^((?!:).)*$)`;\n\n      sortedGroups.forEach((group, groupIndex) => {\n        const variants = [];\n        group.forEach((cls) => {\n          const prefix = groupUtil.getPrefix(cls, mergedConfig.separator);\n          const name = cls.substr(prefix.length);\n          if (groupIndex === arbitraryPropsGroupIndex) {\n            // Arbitrary Props\n            const arbitraryProp = groupUtil.getArbitraryProperty(name, mergedConfig.separator);\n            const identifier = prefix + arbitraryProp;\n            const idx = variants.findIndex((v) => identifier === v.prefix);\n            if (idx === -1) {\n              variants.push({\n                prefix: identifier,\n                name: [name],\n              });\n            } else {\n              variants[idx].name.push(name);\n            }\n          } else {\n            // \"Regular classNames\"\n            const rePrefix = prefix === '' ? ambiguousArbitraryValuesOrClasses : '^' + prefix;\n            const idx = variants.findIndex((v) => v.prefix === rePrefix);\n            if (idx === -1) {\n              variants.push({\n                prefix: rePrefix,\n                name: [name],\n              });\n            } else {\n              variants[idx].name.push(name);\n            }\n          }\n        });\n\n        // Several classNames with the same prefix\n        const potentialTroubles = variants.filter((v) => v.name.length > 1);\n        if (potentialTroubles.length) {\n          potentialTroubles.forEach((variantGroup) => {\n            const re = new RegExp(variantGroup.prefix);\n            const conflicting = group.filter((c) => re.test(c));\n            context.report({\n              node: node,\n              messageId: 'conflictingClassnames',\n              data: {\n                classnames: conflicting.join(', '),\n              },\n            });\n          });\n        }\n      });\n    };\n\n    //----------------------------------------------------------------------\n    // Public\n    //----------------------------------------------------------------------\n\n    const attributeVisitor = function (node) {\n      if (!astUtil.isClassAttribute(node, classRegex) || skipClassAttribute) {\n        return;\n      }\n      if (astUtil.isLiteralAttributeValue(node)) {\n        astUtil.parseNodeRecursive(node, null, parseForContradictingClassNames, true, false, ignoredKeys);\n      } else if (node.value && node.value.type === 'JSXExpressionContainer') {\n        astUtil.parseNodeRecursive(\n          node,\n          node.value.expression,\n          parseForContradictingClassNames,\n          true,\n          false,\n          ignoredKeys\n        );\n      }\n    };\n\n    const callExpressionVisitor = function (node) {\n      const calleeStr = astUtil.calleeToString(node.callee);\n      if (callees.findIndex((name) => calleeStr === name) === -1) {\n        return;\n      }\n      const allClassnamesForNode = [];\n      const pushClasses = (classNames, targetNode) => {\n        if (targetNode === null) {\n          // Classnames should be parsed in isolation (e.g. conditional expressions)\n          parseForContradictingClassNames(classNames, node);\n        } else {\n          // Gather the classes prior to validation\n          allClassnamesForNode.push(...classNames);\n        }\n      };\n      node.arguments.forEach((arg) => {\n        astUtil.parseNodeRecursive(node, arg, pushClasses, true, false, ignoredKeys);\n      });\n      parseForContradictingClassNames(allClassnamesForNode, node);\n    };\n\n    const scriptVisitor = {\n      JSXAttribute: attributeVisitor,\n      TextAttribute: attributeVisitor,\n      CallExpression: callExpressionVisitor,\n      TaggedTemplateExpression: function (node) {\n        if (!tags.includes(node.tag.name ?? node.tag.object?.name ?? node.tag.callee?.name)) {\n          return;\n        }\n\n        const allClassnamesForNode = [];\n        const pushClasses = (classNames, targetNode) => {\n          if (targetNode === null) {\n            // Classnames should be parsed in isolation (e.g. conditional expressions)\n            parseForContradictingClassNames(classNames, node);\n          } else {\n            // Gather the classes prior to validation\n            allClassnamesForNode.push(...classNames);\n          }\n        };\n        astUtil.parseNodeRecursive(node, node.quasi, pushClasses, true, false, ignoredKeys);\n        parseForContradictingClassNames(allClassnamesForNode, node);\n      },\n    };\n\n    const templateVisitor = {\n      CallExpression: callExpressionVisitor,\n      /*\n      Tagged templates inside data bindings\n      https://github.com/vuejs/vue/issues/9721\n      */\n      VAttribute: function (node) {\n        switch (true) {\n          case !astUtil.isValidVueAttribute(node, classRegex):\n            return;\n          case astUtil.isVLiteralValue(node):\n            astUtil.parseNodeRecursive(node, null, parseForContradictingClassNames, true, false, ignoredKeys);\n            break;\n          case astUtil.isArrayExpression(node):\n            const allClassnamesForNode = [];\n            const pushClasses = (classNames, targetNode) => {\n              if (targetNode === null) {\n                // Classnames should be parsed in isolation (e.g. conditional expressions)\n                parseForContradictingClassNames(classNames, node);\n              } else {\n                // Gather the classes prior to validation\n                allClassnamesForNode.push(...classNames);\n              }\n            };\n            node.value.expression.elements.forEach((el) => {\n              astUtil.parseNodeRecursive(node, el, pushClasses, true, false, ignoredKeys);\n            });\n            parseForContradictingClassNames(allClassnamesForNode, node);\n            break;\n          case astUtil.isObjectExpression(node):\n            node.value.expression.properties.forEach((prop) => {\n              astUtil.parseNodeRecursive(node, prop, parseForContradictingClassNames, false, false, ignoredKeys);\n            });\n            break;\n        }\n      },\n    };\n\n    return parserUtil.defineTemplateBodyVisitor(context, templateVisitor, scriptVisitor);\n  },\n};\n","'use strict';\n\nconst fg = require('fast-glob');\nconst fs = require('fs');\nconst postcss = require('postcss');\nconst lastClassFromSelectorRegexp = /\\.([^\\.\\,\\s\\n\\:\\(\\)\\[\\]\\'~\\+\\>\\*\\\\]*)/gim;\nconst removeDuplicatesFromArray = require('./removeDuplicatesFromArray');\n\nconst cssFilesInfos = new Map();\nlet lastUpdate = null;\nlet classnamesFromFiles = [];\n\n/**\n * Read CSS files and extract classnames\n * @param {Array} patterns Glob patterns to locate files\n * @param {Number} refreshRate Interval\n * @returns {Array} List of classnames\n */\nconst generateClassnamesListSync = (patterns, refreshRate = 5_000) => {\n  const now = Date.now();\n  const isExpired = lastUpdate === null || now - lastUpdate > refreshRate;\n\n  if (!isExpired) {\n    // console.log(`generateClassnamesListSync from cache (${classnamesFromFiles.length} classes)`);\n    return classnamesFromFiles;\n  }\n\n  // console.log('generateClassnamesListSync EXPIRED');\n  // Update classnames from CSS files\n  lastUpdate = now;\n  const filesToBeRemoved = new Set([...cssFilesInfos.keys()]);\n  const files = fg.sync(patterns, { suppressErrors: true, stats: true });\n  for (const file of files) {\n    let mtime = '';\n    let canBeSkipped = cssFilesInfos.has(file.path);\n    if (canBeSkipped) {\n      // This file is still used\n      filesToBeRemoved.delete(file.path);\n      // Check modification date\n      const stats = fs.statSync(file.path);\n      mtime = `${stats.mtime || ''}`;\n      canBeSkipped = cssFilesInfos.get(file.path).mtime === mtime;\n    }\n    if (canBeSkipped) {\n      // File did not change since last run\n      continue;\n    }\n    // Parse CSS file\n    const data = fs.readFileSync(file.path, 'utf-8');\n    const root = postcss.parse(data);\n    let detectedClassnames = new Set();\n    root.walkRules((rule) => {\n      const matches = [...rule.selector.matchAll(lastClassFromSelectorRegexp)];\n      const classnames = matches.map((arr) => arr[1]);\n      detectedClassnames = new Set([...detectedClassnames, ...classnames]);\n    });\n    // Save the detected classnames\n    cssFilesInfos.set(file.path, {\n      mtime: mtime,\n      classNames: [...detectedClassnames],\n    });\n  }\n  // Remove erased CSS from the Map\n  const deletedFiles = [...filesToBeRemoved];\n  for (let i = 0; i < deletedFiles.length; i++) {\n    cssFilesInfos.delete(deletedFiles[i]);\n  }\n  // Build the final list\n  classnamesFromFiles = [];\n  cssFilesInfos.forEach((css) => {\n    classnamesFromFiles = [...classnamesFromFiles, ...css.classNames];\n  });\n  // Unique classnames\n  return removeDuplicatesFromArray(classnamesFromFiles);\n};\n\nexport default generateClassnamesListSync;\n","var generateRulesFallback = require('tailwindcss/lib/lib/generateRules').generateRules;\n\nfunction generate(className, context) {\n  // const order = generateRulesFallback(new Set([className]), context).sort(([a], [z]) => bigSign(z - a))[0]?.[0] ?? null;\n  const gen = generateRulesFallback(new Set([className]), context);\n  // console.debug(gen);\n  return gen;\n}\n\nexport default generate;\n","/**\n * @fileoverview Detect classnames which do not belong to Tailwind CSS\n * @author no-custom-classname\n */\n'use strict';\n\nimport { groups as defaultGroups } from '../configs/groups';\nimport astUtil from '../util/ast';\nimport getClassnamesFromCSS from '../util/cssFiles';\nimport customConfig from '../util/customConfig';\nimport docsUrl from '../util/docsUrl';\nimport generated from '../util/generated';\nimport groupUtil from '../util/groupMethods';\nimport parserUtil from '../util/parser';\nimport getOption from '../util/settings';\nconst createContextFallback = require('tailwindcss/lib/lib/setupContextUtils').createContext;\nconst escapeRegex = require('../util/regex').escapeRegex;\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n// Predefine message for use in context.report conditional.\n// messageId will still be usable in tests.\nconst CUSTOM_CLASSNAME_DETECTED_MSG = `Classname '{{classname}}' is not a Tailwind CSS class!`;\n\n// Group/peer names can be arbitrarily named and are not\n// generated by generateRules. Using a custom regexp to\n// validate these avoids false reports.\nconst getGroupNameRegex = (prefix = '') =>\n  new RegExp(`^${escapeRegex(prefix)}(group|peer)\\/[\\\\w\\\\$\\\\#\\\\@\\\\%\\\\^\\\\&\\\\*\\\\_\\\\-]+$`, 'i');\n\nconst contextFallbackCache = new WeakMap();\n\nexport default {\n  meta: {\n    docs: {\n      description: 'Detect classnames which do not belong to Tailwind CSS',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-custom-classname'),\n    },\n    messages: {\n      customClassnameDetected: CUSTOM_CLASSNAME_DETECTED_MSG,\n    },\n    fixable: null,\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          callees: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          ignoredKeys: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          config: {\n            // returned from `loadConfig()` utility\n            type: ['string', 'object'],\n          },\n          cssFiles: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          cssFilesRefreshRate: {\n            type: 'number',\n            // default: 5_000,\n          },\n          tags: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          whitelist: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n        },\n      },\n    ],\n  },\n\n  create: function (context) {\n    const callees = getOption(context, 'callees');\n    const ignoredKeys = getOption(context, 'ignoredKeys');\n    const skipClassAttribute = getOption(context, 'skipClassAttribute');\n    const tags = getOption(context, 'tags');\n    const twConfig = getOption(context, 'config');\n    const cssFiles = getOption(context, 'cssFiles');\n    const cssFilesRefreshRate = getOption(context, 'cssFilesRefreshRate');\n    const whitelist = getOption(context, 'whitelist');\n    const classRegex = getOption(context, 'classRegex');\n\n    const mergedConfig = customConfig.resolve(twConfig);\n    const contextFallback = // Set the created contextFallback in the cache if it does not exist yet.\n      (\n        contextFallbackCache.has(mergedConfig)\n          ? contextFallbackCache\n          : contextFallbackCache.set(mergedConfig, createContextFallback(mergedConfig))\n      ).get(mergedConfig);\n\n    //----------------------------------------------------------------------\n    // Helpers\n    //----------------------------------------------------------------------\n\n    // Init assets before sorting\n    const groups = groupUtil.getGroups(defaultGroups, mergedConfig);\n    const classnamesFromFiles = getClassnamesFromCSS(cssFiles, cssFilesRefreshRate);\n    const groupNameRegex = getGroupNameRegex(mergedConfig.prefix);\n\n    /**\n     * Parse the classnames and report found conflicts\n     * @param {Array} classNames\n     * @param {ASTNode} node\n     */\n    const parseForCustomClassNames = (classNames, node) => {\n      classNames.forEach((className) => {\n        const gen = generated(className, contextFallback);\n        if (gen.length) {\n          return; // Lazier is faster... processing next className!\n        }\n        const idx = groupUtil.getGroupIndex(className, groups, mergedConfig.separator);\n        if (idx >= 0) {\n          return; // Lazier is faster... processing next className!\n        }\n        const whitelistIdx = groupUtil.getGroupIndex(className, whitelist, mergedConfig.separator);\n        if (whitelistIdx >= 0) {\n          return; // Lazier is faster... processing next className!\n        }\n        const fromFilesIdx = groupUtil.getGroupIndex(className, classnamesFromFiles, mergedConfig.separator);\n        if (fromFilesIdx >= 0) {\n          return; // Lazier is faster... processing next className!\n        }\n        if (groupNameRegex.test(className)) {\n          return; // Lazier is faster... processing next className!\n        }\n\n        // No match found\n        context.report({\n          node,\n          messageId: 'customClassnameDetected',\n          data: {\n            classname: className,\n          },\n        });\n      });\n    };\n\n    //----------------------------------------------------------------------\n    // Public\n    //----------------------------------------------------------------------\n\n    const attributeVisitor = function (node) {\n      if (!astUtil.isClassAttribute(node, classRegex) || skipClassAttribute) {\n        return;\n      }\n      if (astUtil.isLiteralAttributeValue(node)) {\n        astUtil.parseNodeRecursive(node, null, parseForCustomClassNames, false, false, ignoredKeys);\n      } else if (node.value && node.value.type === 'JSXExpressionContainer') {\n        astUtil.parseNodeRecursive(node, node.value.expression, parseForCustomClassNames, false, false, ignoredKeys);\n      }\n    };\n\n    const callExpressionVisitor = function (node) {\n      const calleeStr = astUtil.calleeToString(node.callee);\n      if (callees.findIndex((name) => calleeStr === name) === -1) {\n        return;\n      }\n      node.arguments.forEach((arg) => {\n        astUtil.parseNodeRecursive(node, arg, parseForCustomClassNames, false, false, ignoredKeys);\n      });\n    };\n\n    const scriptVisitor = {\n      JSXAttribute: attributeVisitor,\n      TextAttribute: attributeVisitor,\n      CallExpression: callExpressionVisitor,\n      TaggedTemplateExpression: function (node) {\n        if (!tags.includes(node.tag.name ?? node.tag.object?.name ?? node.tag.callee?.name)) {\n          return;\n        }\n        astUtil.parseNodeRecursive(node, node.quasi, parseForCustomClassNames, false, false, ignoredKeys);\n      },\n    };\n\n    const templateVisitor = {\n      CallExpression: callExpressionVisitor,\n      /*\n      Tagged templates inside data bindings\n      https://github.com/vuejs/vue/issues/9721\n      */\n      VAttribute: function (node) {\n        switch (true) {\n          case !astUtil.isValidVueAttribute(node, classRegex):\n            return;\n          case astUtil.isVLiteralValue(node):\n            astUtil.parseNodeRecursive(node, null, parseForCustomClassNames, false, false, ignoredKeys);\n            break;\n          case astUtil.isArrayExpression(node):\n            node.value.expression.elements.forEach((arg) => {\n              astUtil.parseNodeRecursive(node, arg, parseForCustomClassNames, false, false, ignoredKeys);\n            });\n            break;\n          case astUtil.isObjectExpression(node):\n            node.value.expression.properties.forEach((prop) => {\n              astUtil.parseNodeRecursive(node, prop, parseForCustomClassNames, false, false, ignoredKeys);\n            });\n            break;\n        }\n      },\n    };\n\n    return parserUtil.defineTemplateBodyVisitor(context, templateVisitor, scriptVisitor);\n  },\n};\n","/**\n * @fileoverview Detect arbitrary classnames which have an existing equivalent preset in the configuration\n * @author François Massart\n */\n'use strict';\n\nimport { groups as defaultGroups } from '../configs/groups';\nimport astUtil from '../util/ast';\nimport customConfig from '../util/customConfig';\nimport docsUrl from '../util/docsUrl';\nimport groupUtil from '../util/groupMethods';\nimport parserUtil from '../util/parser';\nimport getOption from '../util/settings';\nimport length from '../util/types/length';\n\nconst validZeroRegEx = length.validZeroRegEx;\n\n// TODO get the correct value of start and end\n// TODO make rule fixable when only 1 match\n// TODO propose several fixes when multiple matches + priority to exact match\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n// Predefine message for use in context.report conditional.\n// messageId will still be usable in tests.\nconst UNNECESSARY_ARBITRARY_VALUE_DETECTED_MSG = `The arbitrary class '{{classname}}' could be replaced by '{{presets}}'`;\n\nexport default {\n  meta: {\n    docs: {\n      description: 'Forbid using arbitrary values in classnames when an equivalent preset exists',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-unnecessary-arbitrary-value'),\n    },\n    messages: {\n      unnecessaryArbitraryValueDetected: UNNECESSARY_ARBITRARY_VALUE_DETECTED_MSG,\n    },\n    fixable: 'code',\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          callees: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          ignoredKeys: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n          config: {\n            // returned from `loadConfig()` utility\n            type: ['string', 'object'],\n          },\n          tags: {\n            type: 'array',\n            items: { type: 'string', minLength: 0 },\n            uniqueItems: true,\n          },\n        },\n      },\n    ],\n  },\n\n  create: function (context) {\n    const callees = getOption(context, 'callees');\n    const skipClassAttribute = getOption(context, 'skipClassAttribute');\n    const tags = getOption(context, 'tags');\n    const twConfig = getOption(context, 'config');\n    const classRegex = getOption(context, 'classRegex');\n\n    const mergedConfig = customConfig.resolve(twConfig);\n    const groups = groupUtil.getGroups(defaultGroups, mergedConfig);\n    const configKeys = groupUtil.getGroupConfigKeys(defaultGroups);\n    let parentTemplateLiteral = null;\n\n    //----------------------------------------------------------------------\n    // Helpers\n    //----------------------------------------------------------------------\n\n    /**\n     * Recursive function crawling into child nodes\n     * @param {ASTNode} node The root node of the current parsing\n     * @param {ASTNode} arg The child node of node\n     * @returns {void}\n     */\n    const parseForArbitraryValues = (node, arg = null) => {\n      let start = null;\n      let end = null;\n      let originalClassNamesValue = null;\n      if (arg === null) {\n        originalClassNamesValue = astUtil.extractValueFromNode(node);\n        const range = astUtil.extractRangeFromNode(node);\n        if (node.type === 'TextAttribute') {\n          start = range[0];\n          end = range[1];\n        } else {\n          start = range[0] + 1;\n          end = range[1] - 1;\n        }\n      } else {\n        switch (arg.type) {\n          case 'Identifier':\n            return;\n          case 'TemplateLiteral':\n            parentTemplateLiteral = arg;\n            arg.expressions.forEach((exp) => {\n              parseForArbitraryValues(node, exp);\n            });\n            arg.quasis.forEach((quasis) => {\n              parseForArbitraryValues(node, quasis);\n            });\n            parentTemplateLiteral = null;\n            return;\n          case 'ConditionalExpression':\n            parseForArbitraryValues(node, arg.consequent);\n            parseForArbitraryValues(node, arg.alternate);\n            return;\n          case 'LogicalExpression':\n            parseForArbitraryValues(node, arg.right);\n            return;\n          case 'ArrayExpression':\n            arg.elements.forEach((el) => {\n              parseForArbitraryValues(node, el);\n            });\n            return;\n          case 'ObjectExpression':\n            const isUsedByClassNamesPlugin = node.callee && node.callee.name === 'classnames';\n            const isVue = node.key && node.key.type === 'VDirectiveKey';\n            arg.properties.forEach((prop) => {\n              const propVal = isUsedByClassNamesPlugin || isVue ? prop.key : prop.value;\n              parseForArbitraryValues(node, propVal);\n            });\n            return;\n          case 'Property':\n            parseForArbitraryValues(node, arg.key);\n            start = arg.range[0] + 1;\n            end = arg.range[1] - 1;\n            return;\n          case 'Literal':\n            originalClassNamesValue = arg.value;\n            start = arg.range[0] + 1;\n            end = arg.range[1] - 1;\n            break;\n          case 'TemplateElement':\n            originalClassNamesValue = arg.value.raw;\n            if (originalClassNamesValue === '') {\n              return;\n            }\n            start = arg.range[0];\n            end = arg.range[1];\n            if (parentTemplateLiteral) {\n              if (parentTemplateLiteral.range[0] === start) {\n                start += 1; // Skip opening backtick\n              } else {\n                start += 1; // Skip closing }\n              }\n              if (parentTemplateLiteral.range[1] === end) {\n                end -= 1; // Skip closing backtick\n              } else {\n                end -= 2; // Skip opening ${\n              }\n            }\n            break;\n        }\n      }\n\n      const arbitraryRegEx = /^(?<backBone>.*)\\[(?<arbitraryValue>.*)\\]$/i;\n      const { classNames } = astUtil.extractClassnamesFromValue(originalClassNamesValue);\n      const arbitraryClassnames = classNames.filter((c) => arbitraryRegEx.test(c));\n\n      if (arbitraryClassnames.length === 0) {\n        return;\n      }\n\n      const unnecessaryArbitraryClasses = [];\n      const existingSubstitutes = [];\n\n      arbitraryClassnames.forEach((arbitraryClass, idx) => {\n        const parsed = groupUtil.parseClassname(arbitraryClass, [], mergedConfig, idx);\n        const res = arbitraryRegEx.exec(parsed.name);\n        if (res && res.groups && res.groups.backBone && res.groups.arbitraryValue) {\n          const backBone = res.groups.backBone;\n          const arbitraryValue = res.groups.arbitraryValue;\n          const groupIdx = groupUtil.getGroupIndex(arbitraryClass, groups, mergedConfig.separator);\n          if ([groups[groupIdx], parsed.body, arbitraryValue].includes(undefined)) {\n            return false;\n          }\n          const canBeNegative = groups[groupIdx].indexOf('?<negativeValue>') !== -1;\n          const isNegativeClass = parsed.body.indexOf('-') === 0;\n          const isNegativeValue = arbitraryValue.indexOf('-') === 0;\n          const configurationKey = configKeys[groupIdx];\n          const configuration = mergedConfig.theme[configurationKey];\n          if ([undefined, null].includes(configuration)) {\n            return false;\n          }\n          const configurationKeys = Object.keys(configuration);\n          const zeroValueWithOrWithoutUnitsPattern = new RegExp(validZeroRegEx, 'i');\n          const isZeroArbitraryValue = zeroValueWithOrWithoutUnitsPattern.test(arbitraryValue);\n          const negativeSubstitutes = [];\n          const matchingConfigurationKeys = configurationKeys.filter((key) => {\n            const configValue = configuration[key];\n            if (isZeroArbitraryValue && zeroValueWithOrWithoutUnitsPattern.test(configValue)) {\n              // Both config and tested values are 0 based (with or without units)\n              negativeSubstitutes.push(false);\n              return true;\n            }\n            // Negative possibilities\n            if (canBeNegative) {\n              const absoluteValue = isNegativeValue ? arbitraryValue.substring(1) : arbitraryValue;\n              const computedAsNegative = isNegativeClass !== isNegativeValue;\n              if (`${configValue}` === `${absoluteValue}`) {\n                negativeSubstitutes.push(computedAsNegative);\n                return true;\n              }\n              return false;\n            }\n            // Default\n            if (`${configValue}` === `${arbitraryValue}`) {\n              negativeSubstitutes.push(false);\n              return true;\n            }\n            return false;\n          });\n          if (matchingConfigurationKeys.length) {\n            unnecessaryArbitraryClasses.push(parsed.name);\n            existingSubstitutes.push(\n              matchingConfigurationKeys.map((key, idx) => {\n                let patchedBody = backBone.substring(parsed.variants.length);\n                patchedBody = patchedBody.charAt(0) === '-' ? patchedBody.substring(1) : patchedBody;\n                const noneOrMinus = negativeSubstitutes[idx] ? '-' : '';\n                if (key === 'DEFAULT') {\n                  return parsed.variants + noneOrMinus + patchedBody.substring(0, patchedBody.length - 1);\n                }\n                return parsed.variants + noneOrMinus + patchedBody + key;\n              })\n            );\n          }\n        }\n      });\n\n      // TODO Group by range and bundle the fix\n      const fixables = {};\n      unnecessaryArbitraryClasses.forEach((forbiddenClass, idx) => {\n        if (existingSubstitutes[idx].length === 1) {\n          const rangeKey = `s${start}e${end}`;\n          if (!fixables[rangeKey]) {\n            fixables[rangeKey] = [];\n          }\n          const fixer = {\n            unjustified: forbiddenClass,\n            substitute: existingSubstitutes[idx][0],\n          };\n          fixables[rangeKey].push(fixer);\n        } else {\n          context.report({\n            node,\n            messageId: 'unnecessaryArbitraryValueDetected',\n            data: {\n              classname: forbiddenClass,\n              presets: existingSubstitutes[idx].join(\"' or '\"),\n            },\n          });\n        }\n      });\n      Object.keys(fixables).forEach((rangeKey) => {\n        const batchFixes = fixables[rangeKey];\n        let patched = originalClassNamesValue;\n        const forbiddenClasses = [];\n        const substitutes = [];\n        for (let idx = 0; idx < batchFixes.length; idx++) {\n          // BUG replace could affect same class with distinct variants... eg. h-0 might affect min-h-0\n          const unjustified = batchFixes[idx].unjustified;\n          forbiddenClasses.push(unjustified);\n          const substitute = batchFixes[idx].substitute;\n          substitutes.push(substitute);\n          patched = patched.replace(unjustified, substitute);\n        }\n        context.report({\n          node,\n          messageId: 'unnecessaryArbitraryValueDetected',\n          data: {\n            classname: forbiddenClasses.join(', '),\n            presets: substitutes.join(', '),\n          },\n          fix: function (fixer) {\n            return fixer.replaceTextRange([start, end], patched);\n          },\n        });\n      });\n    };\n\n    //----------------------------------------------------------------------\n    // Public\n    //----------------------------------------------------------------------\n\n    const attributeVisitor = function (node) {\n      if (!astUtil.isClassAttribute(node, classRegex) || skipClassAttribute) {\n        return;\n      }\n      if (astUtil.isLiteralAttributeValue(node)) {\n        parseForArbitraryValues(node);\n      } else if (node.value && node.value.type === 'JSXExpressionContainer') {\n        parseForArbitraryValues(node, node.value.expression);\n      }\n    };\n\n    const callExpressionVisitor = function (node) {\n      const calleeStr = astUtil.calleeToString(node.callee);\n      if (callees.findIndex((name) => calleeStr === name) === -1) {\n        return;\n      }\n      node.arguments.forEach((arg) => {\n        parseForArbitraryValues(node, arg);\n      });\n    };\n\n    const scriptVisitor = {\n      JSXAttribute: attributeVisitor,\n      TextAttribute: attributeVisitor,\n      CallExpression: callExpressionVisitor,\n      TaggedTemplateExpression: function (node) {\n        if (!tags.includes(node.tag.name)) {\n          return;\n        }\n        parseForArbitraryValues(node, node.quasi);\n      },\n    };\n\n    const templateVisitor = {\n      CallExpression: callExpressionVisitor,\n      /*\n      Tagged templates inside data bindings\n      https://github.com/vuejs/vue/issues/9721\n      */\n      VAttribute: function (node) {\n        switch (true) {\n          case !astUtil.isValidVueAttribute(node, classRegex):\n            return;\n          case astUtil.isVLiteralValue(node):\n            parseForArbitraryValues(node, null);\n            break;\n          case astUtil.isArrayExpression(node):\n            node.value.expression.elements.forEach((arg) => {\n              parseForArbitraryValues(node, arg);\n            });\n            break;\n          case astUtil.isObjectExpression(node):\n            node.value.expression.properties.forEach((prop) => {\n              parseForArbitraryValues(node, prop);\n            });\n            break;\n        }\n      },\n    };\n\n    return parserUtil.defineTemplateBodyVisitor(context, templateVisitor, scriptVisitor);\n  },\n};\n","import classnamesOrder from './classnames-order';\nimport enforcesNegativeArbitraryValues from './enforces-negative-arbitrary-values';\nimport enforcesShorthand from './enforces-shorthand';\nimport migrationFromTailwind2 from './migration-from-tailwind-2';\nimport noArbitraryValue from './no-arbitrary-value';\nimport noContradictingClassname from './no-contradicting-classname';\nimport noCustomClassname from './no-custom-classname';\nimport noUnnecessaryArbitraryValue from './no-unnecessary-arbitrary-value';\n\nexport const rules = {\n  'classnames-order': classnamesOrder,\n  'enforces-negative-arbitrary-values': enforcesNegativeArbitraryValues,\n  'enforces-shorthand': enforcesShorthand,\n  'migration-from-tailwind-2': migrationFromTailwind2,\n  'no-arbitrary-value': noArbitraryValue,\n  'no-contradicting-classname': noContradictingClassname,\n  'no-custom-classname': noCustomClassname,\n  'no-unnecessary-arbitrary-value': noUnnecessaryArbitraryValue,\n};\n","{\n  \"name\": \"eslint-plugin-tailwindcss\",\n  \"version\": \"3.18.0\",\n  \"description\": \"Rules enforcing best practices while using Tailwind CSS\",\n  \"type\": \"module\",\n  \"keywords\": [\n    \"eslint\",\n    \"eslintplugin\",\n    \"eslint-plugin\",\n    \"tailwind\",\n    \"tailwindcss\"\n  ],\n  \"author\": \"François Massart\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/francoismassart/eslint-plugin-tailwindcss\"\n  },\n  \"homepage\": \"https://github.com/francoismassart/eslint-plugin-tailwindcss\",\n  \"bugs\": \"https://github.com/francoismassart/eslint-plugin-tailwindcss/issues\",\n  \"main\": \"lib/index.js\",\n  \"scripts\": {\n    \"test\": \"npm run test:base && npm run test:integration\",\n    \"test:base\": \"mocha \\\"tests/lib/**/*.js\\\"\",\n    \"test:integration\": \"mocha \\\"tests/integrations/*.js\\\" --timeout 60000\",\n    \"build\": \"tsc --build\",\n    \"build:diagnostics\": \"tsc --build --diagnostics\",\n    \"watch\": \"tsc --watch\",\n    \"tsup\": \"tsup ./src/index.ts --outDir lib/\",\n    \"tsup:watch\": \"tsup ./src/index.ts --watch --outDir lib/\",\n    \"docs:init\": \"eslint-doc-generator --init-rule-docs\",\n    \"docs:update\": \"eslint-doc-generator\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"peerDependencies\": {\n    \"tailwindcss\": \"^4.0.0\"\n  },\n  \"dependencies\": {\n    \"@typescript-eslint/utils\": \"^7.13.0\",\n    \"eslint\": \"^8.56.0\",\n    \"fast-glob\": \"^3.2.5\",\n    \"postcss\": \"^8.4.4\"\n  },\n  \"devDependencies\": {\n    \"@angular-eslint/template-parser\": \"^15.2.0\",\n    \"@tailwindcss/aspect-ratio\": \"^0.4.2\",\n    \"@tailwindcss/forms\": \"^0.5.3\",\n    \"@tailwindcss/line-clamp\": \"^0.4.2\",\n    \"@tailwindcss/typography\": \"^0.5.8\",\n    \"@types/eslint\": \"^8.56.10\",\n    \"@types/jest\": \"^29.5.12\",\n    \"@types/node\": \"^18.12.0\",\n    \"@typescript-eslint/parser\": \"^7.13.0\",\n    \"@typescript-eslint/rule-tester\": \"^7.13.0\",\n    \"autoprefixer\": \"^10.4.0\",\n    \"daisyui\": \"^2.6.4\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-doc-generator\": \"^1.7.1\",\n    \"mocha\": \"^10.2.0\",\n    \"semver\": \"^7.6.0\",\n    \"tailwindcss\": \"^4.0.0\",\n    \"tsup\": \"^8.1.0\",\n    \"typescript\": \"^5.4.5\",\n    \"vue-eslint-parser\": \"^9.4.2\"\n  },\n  \"packageManager\": \"npm@10.2.5+sha256.8002e3e7305d2abd4016e1368af48d49b066c269079eeb10a56e7d6598acfdaa\",\n  \"engines\": {\n    \"node\": \">=18.12.0\"\n  },\n  \"license\": \"MIT\"\n}\n","/**\n * @fileoverview Rules enforcing best practices while using Tailwind CSS\n * @author François Massart\n */\n'use strict';\n\nimport { RuleModule } from '@typescript-eslint/utils/ts-eslint';\nimport { type ESLint } from 'eslint';\nimport { configs } from './configs';\nimport { rules } from './rules';\n\n//------------------------------------------------------------------------------\n// Plugin Definition\n//------------------------------------------------------------------------------\n\ntype RuleKey = keyof typeof rules;\n\ninterface Plugin extends Omit<ESLint.Plugin, 'rules'> {\n  rules: Record<RuleKey, RuleModule<any, any, any>>;\n}\n\nconst { name, version } = await import('../package.json');\n\n// import all rules in lib/rules\nconst plugin: Plugin = {\n  meta: {\n    name,\n    version,\n  },\n  rules,\n  configs,\n};\nexport default plugin;\n"],"mappings":"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","names":["name","removeDuplicatesFromArray","order","name","mergedConfig","name","groups","name","mergedConfig","name","mergedConfig","targetGroups","cloned","name","docsUrl","getOption","mergedConfig","suffix","name","docsUrl","customConfig","astUtil","groupUtil","getOption","parserUtil","mergedConfig","name","mergedConfig","groups","name","fs","removeDuplicatesFromArray","createContextFallback","escapeRegex","contextFallbackCache","mergedConfig","groups","classnamesFromFiles","name","validZeroRegEx","mergedConfig","groups","idx","name","init_rules","plugin","init_rules"]}